version: "3.8"

services:
  # Postgresql Database
  db:
    image: postgres:13.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}

  #  DRF API
  backend:
    build:
      context: ./backend
    command: >
      sh -c "sleep 15 &&
            python manage.py makemigrations &&
            python manage.py migrate &&
            echo \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(email='admin@example.com', is_superuser=True).delete(); User.objects.create_superuser('admin', 'admin@example.com', 'nimda')\" | python manage.py shell &&
            gunicorn home.wsgi.prod:application --bind 0.0.0.0:8000 --timeout 120 --workers=3 --threads=3 --worker-connections=1000"
    environment:
      - PROJECT_SECRET_KEY=${PROJECT_SECRET_KEY}
      - PROJECT_STRIPE_ID=${BACKEND_STRIPE_ID}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - PROJECT_AWS_ACCESS_KEY_ID=${PROJECT_AWS_ACCESS_KEY_ID}
      - PROJECT_AWS_SECRET_ACCESS_KEY=${PROJECT_AWS_SECRET_ACCESS_KEY}
      - PROJECT_AWS_STORAGE_BUCKET_NAME=${PROJECT_AWS_STORAGE_BUCKET_NAME}
      - DATABASE_ENGINE=${DATABASE_ENGINE}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
    ports:
      - "8000:8000"
    depends_on:
      - db

  # Frontend
  frontend:
    restart: always
    build:
      context: ./frontend
      args:
        - REACT_APP_STRIPE_ID=${STRIPE_ID}
        - REACT_APP_API_HOST=${API_HOST}
    depends_on:
      - db
      - backend
    ports:
      - 80:80
