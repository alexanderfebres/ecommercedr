{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Desktop\\\\django-react-boilerplate\\\\root\\\\src\\\\containers\\\\Checkout.js\";\nimport React from \"react\";\nimport { CardElement, ElementsConsumer } from \"@stripe/react-stripe-js\";\nexport default class CheckoutForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = async event => {\n      // Block native form submission.\n      event.preventDefault();\n      const {\n        stripe,\n        elements\n      } = this.props;\n\n      if (!stripe || !elements) {\n        // Stripe.js has not loaded yet. Make sure to disable\n        // form submission until Stripe.js has loaded.\n        return;\n      } // Get a reference to a mounted CardElement. Elements knows how\n      // to find your CardElement because there can only ever be one of\n      // each type of element.\n\n\n      const cardElement = elements.getElement(CardElement);\n      const {\n        error,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: cardElement\n      });\n\n      if (error) {\n        console.log(\"[error]\", error);\n      } else {\n        console.log(\"[PaymentMethod]\", paymentMethod);\n      }\n    };\n  }\n\n  render() {\n    const {\n      stripe\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardElement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Pay\"));\n  }\n\n}\n\nconst InjectedCheckoutForm = () => {\n  return /*#__PURE__*/React.createElement(ElementsConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, ({\n    elements,\n    stripe\n  }) => /*#__PURE__*/React.createElement(CheckoutForm, {\n    elements: elements,\n    stripe: stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n};\n\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\"; // Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\n\nconst stripePromise = loadStripe(\"pk_test_JJ1eMdKN0Hp4UFJ6kWXWO4ix00jtXzq5XG\");\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MyCheckoutForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Alexander/Desktop/django-react-boilerplate/root/src/containers/Checkout.js"],"names":["React","CardElement","ElementsConsumer","CheckoutForm","Component","handleSubmit","event","preventDefault","stripe","elements","props","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","render","InjectedCheckoutForm","Elements","loadStripe","stripePromise","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,yBAA9C;AAEA,eAAe,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACxDC,YADwD,GACzC,MAAOC,KAAP,IAAiB;AAC9B;AACAA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAuB,KAAKC,KAAlC;;AAEA,UAAI,CAACF,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,OAV6B,CAY9B;AACA;AACA;;;AACA,YAAME,WAAW,GAAGF,QAAQ,CAACG,UAAT,CAAoBX,WAApB,CAApB;AAEA,YAAM;AAAEY,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAA2B,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAChEC,QAAAA,IAAI,EAAE,MAD0D;AAEhEC,QAAAA,IAAI,EAAEN;AAF0D,OAA3B,CAAvC;;AAKA,UAAIE,KAAJ,EAAW;AACTK,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,KAAvB;AACD,OAFD,MAEO;AACLK,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,aAA/B;AACD;AACF,KA5BuD;AAAA;;AA8BxDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAa,KAAKE,KAAxB;AACA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAACG,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADF;AAQD;;AAxCuD;;AA2C1D,MAAMa,oBAAoB,GAAG,MAAM;AACjC,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEZ,IAAAA,QAAF;AAAYD,IAAAA;AAAZ,GAAD,kBACC,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEC,QAAxB;AAAkC,IAAA,MAAM,EAAED,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAOD,CARD;;AAUA,SAASc,QAAT,QAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;AACA;;AACA,MAAMC,aAAa,GAAGD,UAAU,CAAC,4CAAD,CAAhC;;AAEA,MAAME,GAAG,GAAG,MAAM;AAChB,sBACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAED,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND","sourcesContent":["import React from \"react\";\r\nimport { CardElement, ElementsConsumer } from \"@stripe/react-stripe-js\";\r\n\r\nexport default class CheckoutForm extends React.Component {\r\n  handleSubmit = async (event) => {\r\n    // Block native form submission.\r\n    event.preventDefault();\r\n\r\n    const { stripe, elements } = this.props;\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n\r\n    if (error) {\r\n      console.log(\"[error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { stripe } = this.props;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <CardElement />\r\n        <button type=\"submit\" disabled={!stripe}>\r\n          Pay\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst InjectedCheckoutForm = () => {\r\n  return (\r\n    <ElementsConsumer>\r\n      {({ elements, stripe }) => (\r\n        <CheckoutForm elements={elements} stripe={stripe} />\r\n      )}\r\n    </ElementsConsumer>\r\n  );\r\n};\r\n\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(\"pk_test_JJ1eMdKN0Hp4UFJ6kWXWO4ix00jtXzq5XG\");\r\n\r\nconst App = () => {\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <MyCheckoutForm />\r\n    </Elements>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}