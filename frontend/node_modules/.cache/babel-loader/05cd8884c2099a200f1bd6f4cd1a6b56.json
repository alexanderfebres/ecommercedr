{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommerceproject\\\\root\\\\src\\\\containers\\\\Profile.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select, Table } from \"semantic-ui-react\";\nimport { countryListURL, addressListURL, addressCreateURL, addressUpdateURL, addressDeleteURL, userIDURL // paymentListURL,\n} from \"./constants\";\nimport { authAxios } from \"../Utils\";\nimport { fetchAddresses } from \"../store/actions/Address\";\nimport PaymentHistory from \"./PaymentHistory\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\nlet globalActiveItem = \"billingAddress\"; // class PaymentHistory extends React.Component {\n//   state = {\n//     payments: [],\n//   };\n//   componentDidMount() {\n//     this.handleFetchPayments();\n//   }\n//   handleFetchPayments = () => {\n//     this.setState({ loading: true });\n//     authAxios\n//       .get(paymentListURL)\n//       .then((res) => {\n//         this.setState({\n//           loading: false,\n//           payments: res.data,\n//         });\n//       })\n//       .catch((err) => {\n//         this.setState({ error: err, loading: false });\n//       });\n//   };\n//   render() {\n//     const { payments } = this.state;\n//     return (\n//       <Table celled>\n//         <Table.Header>\n//           <Table.Row>\n//             <Table.HeaderCell>ID</Table.HeaderCell>\n//             <Table.HeaderCell>Amount</Table.HeaderCell>\n//             <Table.HeaderCell>Date</Table.HeaderCell>\n//           </Table.Row>\n//         </Table.Header>\n//         <Table.Body>\n//           {payments.map((p) => {\n//             return (\n//               <Table.Row key={p.id}>\n//                 <Table.Cell>{p.id}</Table.Cell>\n//                 <Table.Cell>${p.amount}</Table.Cell>\n//                 <Table.Cell>{new Date(p.timestamp).toUTCString()}</Table.Cell>\n//               </Table.Row>\n//             );\n//           })}\n//         </Table.Body>\n//       </Table>\n//     );\n//   }\n// }\n// class AddressForm extends React.Component {\n//   state = {\n//     error: null,\n//     loading: false,\n//     formData: {\n//       address_type: \"\",\n//       apartment_address: \"\",\n//       country: \"\",\n//       default: false,\n//       id: \"\",\n//       street_address: \"\",\n//       user: 1,\n//       zip: \"\",\n//     },\n//     saving: false,\n//     success: false,\n//   };\n//   componentDidMount() {\n//     const { address, formType } = this.props;\n//     if (formType === UPDATE_FORM) {\n//       this.setState({ formData: address });\n//     }\n//   }\n//   handleToggleDefault = () => {\n//     const { formData } = this.state;\n//     const updatedFormdata = {\n//       ...formData,\n//       default: !formData.default,\n//     };\n//     this.setState({\n//       formData: updatedFormdata,\n//     });\n//   };\n//   handleChange = (e) => {\n//     const { formData } = this.state;\n//     const updatedFormdata = {\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     };\n//     this.setState({\n//       formData: updatedFormdata,\n//     });\n//   };\n//   handleSelectChange = (e, { name, value }) => {\n//     const { formData } = this.state;\n//     const updatedFormdata = {\n//       ...formData,\n//       [name]: value,\n//     };\n//     this.setState({\n//       formData: updatedFormdata,\n//     });\n//   };\n//   handleSubmit = (e) => {\n//     this.setState({ saving: true });\n//     e.preventDefault();\n//     const { formType } = this.props;\n//     if (formType === UPDATE_FORM) {\n//       this.handleUpdateAddress();\n//     } else {\n//       this.handleCreateAddress();\n//     }\n//   };\n//   handleCreateAddress = () => {\n//     const { userID, activeItem } = this.props;\n//     const { formData } = this.state;\n//     authAxios\n//       .post(addressCreateURL, {\n//         ...formData,\n//         user: userID,\n//         address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\n//       })\n//       .then((res) => {\n//         this.setState({\n//           saving: false,\n//           success: true,\n//           formData: { default: false },\n//         });\n//         this.props.callback();\n//       })\n//       .catch((err) => {\n//         this.setState({ error: err });\n//       });\n//   };\n//   handleUpdateAddress = () => {\n//     const { userID, activeItem } = this.props;\n//     const { formData } = this.state;\n//     authAxios\n//       .put(addressUpdateURL(formData.id), {\n//         ...formData,\n//         user: userID,\n//         address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\n//       })\n//       .then((res) => {\n//         this.setState({\n//           saving: false,\n//           success: true,\n//           formData: { default: false },\n//         });\n//         this.props.callback();\n//       })\n//       .catch((err) => {\n//         this.setState({ error: err });\n//       });\n//   };\n//   render() {\n//     const { countries } = this.props;\n//     const { error, formData, success, saving } = this.state;\n//     return (\n//       <Form onSubmit={this.handleSubmit} success={success} error={error}>\n//         <Form.Input\n//           required\n//           name=\"street_address\"\n//           placeholder=\"Street address\"\n//           onChange={this.handleChange}\n//           value={formData.street_address}\n//         />\n//         <Form.Input\n//           required\n//           name=\"apartment_address\"\n//           placeholder=\"Apartment address\"\n//           onChange={this.handleChange}\n//           value={formData.apartment_address}\n//         />\n//         <Form.Field required>\n//           <Select\n//             loading={countries.length < 1}\n//             fluid\n//             clearable\n//             search\n//             options={countries}\n//             name=\"country\"\n//             placeholder=\"Country\"\n//             onChange={this.handleSelectChange}\n//             value={formData.country}\n//           />\n//         </Form.Field>\n//         <Form.Input\n//           required\n//           name=\"zip\"\n//           placeholder=\"Zip code\"\n//           onChange={this.handleChange}\n//           value={formData.zip}\n//         />\n//         <Form.Checkbox\n//           name=\"default\"\n//           label=\"Make this the default address?\"\n//           onChange={this.handleToggleDefault}\n//           checked={formData.default}\n//         />\n//         {success && (\n//           <Message success header=\"Success!\" content=\"Your address was saved\" />\n//         )}\n//         {error && (\n//           <Message\n//             error\n//             header=\"There was an error\"\n//             content={JSON.stringify(error)}\n//           />\n//         )}\n//         <Form.Button disabled={saving} loading={saving} secondary>\n//           Save\n//         </Form.Button>\n//       </Form>\n//     );\n//   }\n// }\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"billingAddress\",\n      addresses: [],\n      countries: [],\n      userID: null,\n      selectedAddress: null\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {\n        // this.handleFetchAddresses();\n        globalActiveItem = this.state.activeItem;\n        this.props.fetchAddresses();\n        console.log(globalActiveItem);\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n\n      if (activeItem === \"billingAddress\") {\n        return \"Billing Address\";\n      } else if (activeItem === \"shippingAddress\") {\n        return \"Shipping Address\";\n      }\n\n      return \"Payment History\";\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      // this.handleFetchAddresses();\n      this.props.fetchAddresses();\n      this.setState({\n        selectedAddress: null\n      });\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        countries,\n        selectedAddress,\n        userID\n      } = this.state;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 9\n        }\n      }, this.props.addressesList.map(a => {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: a.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }\n        }, a.default && /*#__PURE__*/React.createElement(Label, {\n          as: \"a\",\n          color: \"blue\",\n          ribbon: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 21\n          }\n        }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 19\n          }\n        }, a.street_address, \", \", a.apartment_address), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 19\n          }\n        }, a.country), /*#__PURE__*/React.createElement(Card.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 19\n          }\n        }, a.zip)), /*#__PURE__*/React.createElement(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"yellow\",\n          onClick: () => this.handleSelectAddress(a),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 19\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          color: \"red\",\n          onClick: () => this.handleDeleteAddress(a.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 19\n          }\n        }, \"Delete\")));\n      })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 33\n        }\n      }) : null, selectedAddress === null ? /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        countries: countries,\n        formType: CREATE_FORM,\n        userID: userID,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }\n      }) : null, selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        userID: userID,\n        countries: countries,\n        address: selectedAddress,\n        formType: UPDATE_FORM,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    // this.handleFetchAddresses();\n    this.props.fetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      error,\n      loading\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props;\n\n    if (!isAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 15\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 19\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      pointing: true,\n      vertical: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Billing Address\",\n      active: activeItem === \"billingAddress\",\n      onClick: () => this.handleItemClick(\"billingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Shipping Address\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Payment history\",\n      active: activeItem === \"paymentHistory\",\n      onClick: () => this.handleItemClick(\"paymentHistory\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 13\n      }\n    }, this.handleGetActiveItem()), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 13\n      }\n    }), activeItem === \"paymentHistory\" ? /*#__PURE__*/React.createElement(PaymentHistory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 15\n      }\n    }) : this.renderAddresses())));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    addressesList: state.address.addressList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  console.log(globalActiveItem);\n  return {\n    fetchAddresses: () => dispatch(fetchAddresses(globalActiveItem === \"billingAddress\" ? \"B\" : \"S\"))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["C:/Users/Alexander/Desktop/important/ecommerceproject/root/src/containers/Profile.js"],"names":["React","connect","Redirect","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","Table","countryListURL","addressListURL","addressCreateURL","addressUpdateURL","addressDeleteURL","userIDURL","authAxios","fetchAddresses","PaymentHistory","UPDATE_FORM","CREATE_FORM","globalActiveItem","Profile","Component","state","activeItem","addresses","countries","userID","selectedAddress","handleItemClick","name","setState","props","console","log","handleGetActiveItem","handleFormatCountries","keys","Object","map","k","key","text","value","handleDeleteAddress","addressID","delete","then","res","handleCallback","catch","err","error","handleSelectAddress","address","handleFetchUserID","get","data","handleFetchCountries","renderAddresses","addressesList","a","id","default","street_address","apartment_address","country","zip","length","componentDidMount","render","loading","isAuthenticated","JSON","stringify","mapStateToProps","auth","token","addressList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Dimmer,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Label,\r\n  Loader,\r\n  Menu,\r\n  Message,\r\n  Segment,\r\n  Select,\r\n  Table,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  countryListURL,\r\n  addressListURL,\r\n  addressCreateURL,\r\n  addressUpdateURL,\r\n  addressDeleteURL,\r\n  userIDURL,\r\n  // paymentListURL,\r\n} from \"./constants\";\r\nimport { authAxios } from \"../Utils\";\r\nimport { fetchAddresses } from \"../store/actions/Address\";\r\n\r\nimport PaymentHistory from \"./PaymentHistory\";\r\n\r\nconst UPDATE_FORM = \"UPDATE_FORM\";\r\nconst CREATE_FORM = \"CREATE_FORM\";\r\n\r\nlet globalActiveItem = \"billingAddress\";\r\n\r\n// class PaymentHistory extends React.Component {\r\n//   state = {\r\n//     payments: [],\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     this.handleFetchPayments();\r\n//   }\r\n\r\n//   handleFetchPayments = () => {\r\n//     this.setState({ loading: true });\r\n//     authAxios\r\n//       .get(paymentListURL)\r\n//       .then((res) => {\r\n//         this.setState({\r\n//           loading: false,\r\n//           payments: res.data,\r\n//         });\r\n//       })\r\n//       .catch((err) => {\r\n//         this.setState({ error: err, loading: false });\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     const { payments } = this.state;\r\n//     return (\r\n//       <Table celled>\r\n//         <Table.Header>\r\n//           <Table.Row>\r\n//             <Table.HeaderCell>ID</Table.HeaderCell>\r\n//             <Table.HeaderCell>Amount</Table.HeaderCell>\r\n//             <Table.HeaderCell>Date</Table.HeaderCell>\r\n//           </Table.Row>\r\n//         </Table.Header>\r\n//         <Table.Body>\r\n//           {payments.map((p) => {\r\n//             return (\r\n//               <Table.Row key={p.id}>\r\n//                 <Table.Cell>{p.id}</Table.Cell>\r\n//                 <Table.Cell>${p.amount}</Table.Cell>\r\n//                 <Table.Cell>{new Date(p.timestamp).toUTCString()}</Table.Cell>\r\n//               </Table.Row>\r\n//             );\r\n//           })}\r\n//         </Table.Body>\r\n//       </Table>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// class AddressForm extends React.Component {\r\n//   state = {\r\n//     error: null,\r\n//     loading: false,\r\n//     formData: {\r\n//       address_type: \"\",\r\n//       apartment_address: \"\",\r\n//       country: \"\",\r\n//       default: false,\r\n//       id: \"\",\r\n//       street_address: \"\",\r\n//       user: 1,\r\n//       zip: \"\",\r\n//     },\r\n//     saving: false,\r\n//     success: false,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const { address, formType } = this.props;\r\n//     if (formType === UPDATE_FORM) {\r\n//       this.setState({ formData: address });\r\n//     }\r\n//   }\r\n\r\n//   handleToggleDefault = () => {\r\n//     const { formData } = this.state;\r\n//     const updatedFormdata = {\r\n//       ...formData,\r\n//       default: !formData.default,\r\n//     };\r\n//     this.setState({\r\n//       formData: updatedFormdata,\r\n//     });\r\n//   };\r\n\r\n//   handleChange = (e) => {\r\n//     const { formData } = this.state;\r\n//     const updatedFormdata = {\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     };\r\n//     this.setState({\r\n//       formData: updatedFormdata,\r\n//     });\r\n//   };\r\n\r\n//   handleSelectChange = (e, { name, value }) => {\r\n//     const { formData } = this.state;\r\n//     const updatedFormdata = {\r\n//       ...formData,\r\n//       [name]: value,\r\n//     };\r\n//     this.setState({\r\n//       formData: updatedFormdata,\r\n//     });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     this.setState({ saving: true });\r\n//     e.preventDefault();\r\n//     const { formType } = this.props;\r\n//     if (formType === UPDATE_FORM) {\r\n//       this.handleUpdateAddress();\r\n//     } else {\r\n//       this.handleCreateAddress();\r\n//     }\r\n//   };\r\n\r\n//   handleCreateAddress = () => {\r\n//     const { userID, activeItem } = this.props;\r\n//     const { formData } = this.state;\r\n//     authAxios\r\n//       .post(addressCreateURL, {\r\n//         ...formData,\r\n//         user: userID,\r\n//         address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\r\n//       })\r\n//       .then((res) => {\r\n//         this.setState({\r\n//           saving: false,\r\n//           success: true,\r\n//           formData: { default: false },\r\n//         });\r\n//         this.props.callback();\r\n//       })\r\n//       .catch((err) => {\r\n//         this.setState({ error: err });\r\n//       });\r\n//   };\r\n\r\n//   handleUpdateAddress = () => {\r\n//     const { userID, activeItem } = this.props;\r\n//     const { formData } = this.state;\r\n//     authAxios\r\n//       .put(addressUpdateURL(formData.id), {\r\n//         ...formData,\r\n//         user: userID,\r\n//         address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\r\n//       })\r\n//       .then((res) => {\r\n//         this.setState({\r\n//           saving: false,\r\n//           success: true,\r\n//           formData: { default: false },\r\n//         });\r\n//         this.props.callback();\r\n//       })\r\n//       .catch((err) => {\r\n//         this.setState({ error: err });\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     const { countries } = this.props;\r\n//     const { error, formData, success, saving } = this.state;\r\n//     return (\r\n//       <Form onSubmit={this.handleSubmit} success={success} error={error}>\r\n//         <Form.Input\r\n//           required\r\n//           name=\"street_address\"\r\n//           placeholder=\"Street address\"\r\n//           onChange={this.handleChange}\r\n//           value={formData.street_address}\r\n//         />\r\n//         <Form.Input\r\n//           required\r\n//           name=\"apartment_address\"\r\n//           placeholder=\"Apartment address\"\r\n//           onChange={this.handleChange}\r\n//           value={formData.apartment_address}\r\n//         />\r\n//         <Form.Field required>\r\n//           <Select\r\n//             loading={countries.length < 1}\r\n//             fluid\r\n//             clearable\r\n//             search\r\n//             options={countries}\r\n//             name=\"country\"\r\n//             placeholder=\"Country\"\r\n//             onChange={this.handleSelectChange}\r\n//             value={formData.country}\r\n//           />\r\n//         </Form.Field>\r\n//         <Form.Input\r\n//           required\r\n//           name=\"zip\"\r\n//           placeholder=\"Zip code\"\r\n//           onChange={this.handleChange}\r\n//           value={formData.zip}\r\n//         />\r\n//         <Form.Checkbox\r\n//           name=\"default\"\r\n//           label=\"Make this the default address?\"\r\n//           onChange={this.handleToggleDefault}\r\n//           checked={formData.default}\r\n//         />\r\n//         {success && (\r\n//           <Message success header=\"Success!\" content=\"Your address was saved\" />\r\n//         )}\r\n//         {error && (\r\n//           <Message\r\n//             error\r\n//             header=\"There was an error\"\r\n//             content={JSON.stringify(error)}\r\n//           />\r\n//         )}\r\n//         <Form.Button disabled={saving} loading={saving} secondary>\r\n//           Save\r\n//         </Form.Button>\r\n//       </Form>\r\n//     );\r\n//   }\r\n// }\r\n\r\nclass Profile extends React.Component {\r\n  state = {\r\n    activeItem: \"billingAddress\",\r\n    addresses: [],\r\n    countries: [],\r\n    userID: null,\r\n    selectedAddress: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.handleFetchAddresses();\r\n    this.props.fetchAddresses();\r\n    this.handleFetchCountries();\r\n    this.handleFetchUserID();\r\n  }\r\n\r\n  handleItemClick = (name) => {\r\n    this.setState({ activeItem: name }, () => {\r\n      // this.handleFetchAddresses();\r\n      globalActiveItem = this.state.activeItem;\r\n      this.props.fetchAddresses();\r\n      console.log(globalActiveItem);\r\n    });\r\n  };\r\n\r\n  handleGetActiveItem = () => {\r\n    const { activeItem } = this.state;\r\n    if (activeItem === \"billingAddress\") {\r\n      return \"Billing Address\";\r\n    } else if (activeItem === \"shippingAddress\") {\r\n      return \"Shipping Address\";\r\n    }\r\n    return \"Payment History\";\r\n  };\r\n\r\n  handleFormatCountries = (countries) => {\r\n    const keys = Object.keys(countries);\r\n    return keys.map((k) => {\r\n      return {\r\n        key: k,\r\n        text: countries[k],\r\n        value: k,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleDeleteAddress = (addressID) => {\r\n    authAxios\r\n      .delete(addressDeleteURL(addressID))\r\n      .then((res) => {\r\n        this.handleCallback();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleSelectAddress = (address) => {\r\n    this.setState({ selectedAddress: address });\r\n  };\r\n\r\n  handleFetchUserID = () => {\r\n    authAxios\r\n      .get(userIDURL)\r\n      .then((res) => {\r\n        this.setState({ userID: res.data.userID });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleFetchCountries = () => {\r\n    authAxios\r\n      .get(countryListURL)\r\n      .then((res) => {\r\n        this.setState({ countries: this.handleFormatCountries(res.data) });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  // handleFetchAddresses = () => {\r\n  //   this.setState({ loading: true });\r\n  //   const { activeItem } = this.state;\r\n  //   authAxios\r\n  //     .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\r\n  //     .then((res) => {\r\n  //       this.setState({ addresses: res.data, loading: false });\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       this.setState({ error: err });\r\n  //     });\r\n  // };\r\n\r\n  handleCallback = () => {\r\n    // this.handleFetchAddresses();\r\n    this.props.fetchAddresses();\r\n    this.setState({ selectedAddress: null });\r\n  };\r\n\r\n  renderAddresses = () => {\r\n    const {\r\n      activeItem,\r\n      addresses,\r\n      countries,\r\n      selectedAddress,\r\n      userID,\r\n    } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card.Group>\r\n          {this.props.addressesList.map((a) => {\r\n            return (\r\n              <Card key={a.id}>\r\n                <Card.Content>\r\n                  {a.default && (\r\n                    <Label as=\"a\" color=\"blue\" ribbon=\"right\">\r\n                      Default\r\n                    </Label>\r\n                  )}\r\n                  <Card.Header>\r\n                    {a.street_address}, {a.apartment_address}\r\n                  </Card.Header>\r\n                  <Card.Meta>{a.country}</Card.Meta>\r\n                  <Card.Description>{a.zip}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                  <Button\r\n                    color=\"yellow\"\r\n                    onClick={() => this.handleSelectAddress(a)}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                  <Button\r\n                    color=\"red\"\r\n                    onClick={() => this.handleDeleteAddress(a.id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Card.Content>\r\n              </Card>\r\n            );\r\n          })}\r\n        </Card.Group>\r\n        {addresses.length > 0 ? <Divider /> : null}\r\n        {selectedAddress === null ? (\r\n          <AddressForm\r\n            activeItem={activeItem}\r\n            countries={countries}\r\n            formType={CREATE_FORM}\r\n            userID={userID}\r\n            callback={this.handleCallback}\r\n          />\r\n        ) : null}\r\n        {selectedAddress && (\r\n          <AddressForm\r\n            activeItem={activeItem}\r\n            userID={userID}\r\n            countries={countries}\r\n            address={selectedAddress}\r\n            formType={UPDATE_FORM}\r\n            callback={this.handleCallback}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { activeItem, error, loading } = this.state;\r\n    const { isAuthenticated } = this.props;\r\n    if (!isAuthenticated) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <Grid container columns={2} divided>\r\n        <Grid.Row columns={1}>\r\n          <Grid.Column>\r\n            {error && (\r\n              <Message\r\n                error\r\n                header=\"There was an error\"\r\n                content={JSON.stringify(error)}\r\n              />\r\n            )}\r\n            {loading && (\r\n              <Segment>\r\n                <Dimmer active inverted>\r\n                  <Loader inverted>Loading</Loader>\r\n                </Dimmer>\r\n                <Image src=\"/images/wireframe/short-paragraph.png\" />\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column width={6}>\r\n            <Menu pointing vertical fluid>\r\n              <Menu.Item\r\n                name=\"Billing Address\"\r\n                active={activeItem === \"billingAddress\"}\r\n                onClick={() => this.handleItemClick(\"billingAddress\")}\r\n              />\r\n              <Menu.Item\r\n                name=\"Shipping Address\"\r\n                active={activeItem === \"shippingAddress\"}\r\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\r\n              />\r\n              <Menu.Item\r\n                name=\"Payment history\"\r\n                active={activeItem === \"paymentHistory\"}\r\n                onClick={() => this.handleItemClick(\"paymentHistory\")}\r\n              />\r\n            </Menu>\r\n          </Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Header>{this.handleGetActiveItem()}</Header>\r\n            <Divider />\r\n            {activeItem === \"paymentHistory\" ? (\r\n              <PaymentHistory />\r\n            ) : (\r\n              this.renderAddresses()\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n    addressesList: state.address.addressList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  console.log(globalActiveItem);\r\n\r\n  return {\r\n    fetchAddresses: () =>\r\n      dispatch(\r\n        fetchAddresses(globalActiveItem === \"billingAddress\" ? \"B\" : \"S\")\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n"]},"metadata":{},"sourceType":"module"}