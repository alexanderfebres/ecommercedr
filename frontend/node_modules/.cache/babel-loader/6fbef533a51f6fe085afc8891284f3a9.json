{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommerceproject\\\\root\\\\src\\\\containers\\\\ProductDetail.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, Container, Dimmer, Divider, Form, Grid, Header, Icon, Image, Item, Label, Loader, Message, Segment, Select } from \"semantic-ui-react\";\nimport { productDetailURL, addToCartURL } from \"./constants\";\nimport { authAxios } from \"../Utils\";\nimport { fetchCart } from \"../store/actions/Cart\";\n\nclass ProductDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      error: null,\n      data: [],\n      formVisible: false,\n      formData: {}\n    };\n\n    this.handleToggleForm = () => {\n      const {\n        formVisible\n      } = this.state;\n      this.setState({\n        formVisible: !formVisible\n      });\n    };\n\n    this.handleFetchItem = () => {\n      const {\n        match: {\n          params\n        }\n      } = this.props;\n      this.setState({\n        loading: true\n      });\n      axios.get(productDetailURL(params.productID)).then(res => {\n        this.setState({\n          data: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleFormatData = formData => {\n      return Object.keys(formData).map(key => {\n        return formData[key];\n      });\n    };\n\n    this.handleAddToCart = slug => {\n      this.setState({\n        loading: true\n      });\n      const {\n        formData\n      } = this.state;\n      const variations = this.handleFormatData(formData);\n      authAxios.post(addToCartURL, {\n        slug,\n        variations\n      }).then(res => {\n        this.props.fetchCart();\n        this.setState({\n          loading: false\n        });\n        this.props.history.push(\"/order-summary\");\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormData = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormData\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchItem();\n  }\n\n  render() {\n    const {\n      data,\n      error,\n      formData,\n      formVisible,\n      loading\n    } = this.state;\n    const item = data;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was some errors with your submission\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      image: item.image,\n      header: item.title,\n      meta: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 23\n        }\n      }, item.category),\n      description: item.description,\n      extra: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        fluid: true,\n        color: \"yellow\",\n        floated: \"right\",\n        icon: true,\n        labelPosition: \"right\",\n        onClick: this.handleToggleForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, \"Add to cart.\", /*#__PURE__*/React.createElement(Icon, {\n        name: \"cart plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }), formVisible && /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }), data.variations.map(v => {\n      const name = v.name.toLowerCase();\n      return /*#__PURE__*/React.createElement(Form.Field, {\n        key: v.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        name: name,\n        onChange: this.handleChange,\n        options: v.item_variations.map(item => {\n          return {\n            key: item.id,\n            text: item.value,\n            value: item.id\n          };\n        }),\n        placeholder: `Choose a ${name}`,\n        selection: true,\n        value: formData[name],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 27\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      onClick: () => this.handleAddToCart(item.slug),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, \"Try different variations\"), data.variations && data.variations.map(v => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: v.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 23\n        }\n      }, v.name), /*#__PURE__*/React.createElement(Item.Group, {\n        divided: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 23\n        }\n      }, v.item_variations.map(iv => {\n        return /*#__PURE__*/React.createElement(Item, {\n          key: iv.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }\n        }, iv.attachment && /*#__PURE__*/React.createElement(Item.Image, {\n          size: \"tiny\",\n          src: `http://127.0.0.1:8000${iv.attachment}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(Item.Content, {\n          verticalAlign: \"middle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 31\n          }\n        }, iv.value));\n      })));\n    })))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProductDetail));","map":{"version":3,"sources":["C:/Users/Alexander/Desktop/important/ecommerceproject/root/src/containers/ProductDetail.js"],"names":["React","axios","withRouter","connect","Button","Card","Container","Dimmer","Divider","Form","Grid","Header","Icon","Image","Item","Label","Loader","Message","Segment","Select","productDetailURL","addToCartURL","authAxios","fetchCart","ProductDetail","Component","state","loading","error","data","formVisible","formData","handleToggleForm","setState","handleFetchItem","match","params","props","get","productID","then","res","catch","err","handleFormatData","Object","keys","map","key","handleAddToCart","slug","variations","post","history","push","handleChange","e","name","value","updatedFormData","componentDidMount","render","item","JSON","stringify","image","title","category","description","v","toLowerCase","id","item_variations","text","iv","attachment","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Dimmer,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Item,\r\n  Label,\r\n  Loader,\r\n  Message,\r\n  Segment,\r\n  Select,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { productDetailURL, addToCartURL } from \"./constants\";\r\n\r\nimport { authAxios } from \"../Utils\";\r\n\r\nimport { fetchCart } from \"../store/actions/Cart\";\r\n\r\nclass ProductDetail extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    error: null,\r\n    data: [],\r\n    formVisible: false,\r\n    formData: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleFetchItem();\r\n  }\r\n\r\n  handleToggleForm = () => {\r\n    const { formVisible } = this.state;\r\n    this.setState({ formVisible: !formVisible });\r\n  };\r\n  handleFetchItem = () => {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    this.setState({ loading: true });\r\n    axios\r\n      .get(productDetailURL(params.productID))\r\n      .then((res) => {\r\n        this.setState({ data: res.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err, loading: false });\r\n      });\r\n  };\r\n\r\n  handleFormatData = (formData) => {\r\n    return Object.keys(formData).map((key) => {\r\n      return formData[key];\r\n    });\r\n  };\r\n  handleAddToCart = (slug) => {\r\n    this.setState({ loading: true });\r\n    const { formData } = this.state;\r\n    const variations = this.handleFormatData(formData);\r\n    authAxios\r\n      .post(addToCartURL, { slug, variations })\r\n      .then((res) => {\r\n        this.props.fetchCart();\r\n        this.setState({ loading: false });\r\n        this.props.history.push(\"/order-summary\");\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err, loading: false });\r\n      });\r\n  };\r\n\r\n  handleChange = (e, { name, value }) => {\r\n    const { formData } = this.state;\r\n    const updatedFormData = {\r\n      ...formData,\r\n      [name]: value,\r\n    };\r\n    this.setState({ formData: updatedFormData });\r\n  };\r\n\r\n  render() {\r\n    const { data, error, formData, formVisible, loading } = this.state;\r\n    const item = data;\r\n    return (\r\n      <Container>\r\n        {error && (\r\n          <Message\r\n            error\r\n            header=\"There was some errors with your submission\"\r\n            content={JSON.stringify(error)}\r\n          />\r\n        )}\r\n        {loading && (\r\n          <Segment>\r\n            <Dimmer active inverted>\r\n              <Loader inverted>Loading</Loader>\r\n            </Dimmer>\r\n            <Image src=\"/images/wireframe/short-paragraph.png\" />\r\n          </Segment>\r\n        )}\r\n        <Grid columns={2} divided>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Card\r\n                fluid\r\n                image={item.image}\r\n                header={item.title}\r\n                meta={<React.Fragment>{item.category}</React.Fragment>}\r\n                description={item.description}\r\n                extra={\r\n                  <React.Fragment>\r\n                    <Button\r\n                      fluid\r\n                      color=\"yellow\"\r\n                      floated=\"right\"\r\n                      icon\r\n                      labelPosition=\"right\"\r\n                      onClick={this.handleToggleForm}\r\n                    >\r\n                      Add to cart.\r\n                      <Icon name=\"cart plus\" />\r\n                    </Button>\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n              {formVisible && (\r\n                <Form>\r\n                  <React.Fragment>\r\n                    <Divider />\r\n                    {data.variations.map((v) => {\r\n                      const name = v.name.toLowerCase();\r\n                      return (\r\n                        <Form.Field key={v.id}>\r\n                          <Select\r\n                            name={name}\r\n                            onChange={this.handleChange}\r\n                            options={v.item_variations.map((item) => {\r\n                              return {\r\n                                key: item.id,\r\n                                text: item.value,\r\n                                value: item.id,\r\n                              };\r\n                            })}\r\n                            placeholder={`Choose a ${name}`}\r\n                            selection\r\n                            value={formData[name]}\r\n                          />\r\n                        </Form.Field>\r\n                      );\r\n                    })}\r\n\r\n                    <Form.Button\r\n                      onClick={() => this.handleAddToCart(item.slug)}\r\n                    >\r\n                      Submit\r\n                    </Form.Button>\r\n                  </React.Fragment>\r\n                </Form>\r\n              )}\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Header as=\"h2\">Try different variations</Header>\r\n              {data.variations &&\r\n                data.variations.map((v) => {\r\n                  return (\r\n                    <React.Fragment key={v.id}>\r\n                      <Header as=\"h3\">{v.name}</Header>\r\n                      <Item.Group divided>\r\n                        {v.item_variations.map((iv) => {\r\n                          return (\r\n                            <Item key={iv.id}>\r\n                              {iv.attachment && (\r\n                                <Item.Image\r\n                                  size=\"tiny\"\r\n                                  src={`http://127.0.0.1:8000${iv.attachment}`}\r\n                                />\r\n                              )}\r\n                              <Item.Content verticalAlign=\"middle\">\r\n                                {iv.value}\r\n                              </Item.Content>\r\n                            </Item>\r\n                          );\r\n                        })}\r\n                      </Item.Group>\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCart: () => dispatch(fetchCart()),\r\n  };\r\n};\r\nexport default withRouter(connect(null, mapDispatchToProps)(ProductDetail));\r\n"]},"metadata":{},"sourceType":"module"}