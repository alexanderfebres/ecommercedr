{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommerceproject\\\\root\\\\src\\\\containers\\\\ProductDetail.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Card, Container, Dimmer, Divider, Form, Grid, Header, Icon, Image, Item, Label, Loader, Message, Segment, Select } from \"semantic-ui-react\";\nimport { productDetailURL, addToCartURL } from \"./constants\";\nimport { authAxios } from \"../Utils\";\nimport { fetchCart } from \"../store/actions/Cart\";\n\nclass ProductDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      error: null,\n      data: [],\n      formVisible: false\n    };\n\n    this.handleToggleForm = () => {\n      const {\n        formVisible\n      } = this.state;\n      this.setState({\n        formVisible: !formVisible\n      });\n    };\n\n    this.handleFetchItem = () => {\n      const {\n        match: {\n          params\n        }\n      } = this.props;\n      this.setState({\n        loading: true\n      });\n      console.log(\"asdasdasdasdasdasd\", productDetailURL(params.productID));\n      axios.get(productDetailURL(params.productID)).then(res => {\n        this.setState({\n          data: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n\n    this.handleAddToCart = slug => {\n      this.setState({\n        loading: true\n      });\n      authAxios.post(addToCartURL, {\n        slug\n      }).then(res => {\n        this.props.fetchCart();\n        this.setState({\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchItem();\n  }\n\n  render() {\n    const {\n      data,\n      error,\n      formVisible,\n      loading\n    } = this.state;\n    const item = data;\n    console.log(\"data\", item);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was some errors with your submission\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      fluid: true,\n      image: item.image,\n      header: item.title,\n      meta: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }, item.category),\n      description: item.description,\n      extra: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        fluid: true,\n        color: \"yellow\",\n        floated: \"right\",\n        icon: true,\n        labelPosition: \"right\",\n        onClick: this.handleToggleForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, \"Add to cart.\", /*#__PURE__*/React.createElement(Icon, {\n        name: \"cart plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }), formVisible && /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }), data.variations.map(v => {\n      const {\n        name\n      } = v.name.toLowerCase();\n      return /*#__PURE__*/React.createElement(Form.Field, {\n        key: v.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        name: name,\n        onChange: this.handleChange,\n        options: v.item_variations.map(item => {\n          return {\n            key: item.id,\n            text: item.value,\n            value: item.id\n          };\n        }),\n        placeholder: `Choose a ${name}`,\n        selection: true // value={value}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 27\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      onClick: () => this.handleAddToCart(item.slug),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, \"Try different variations\"), data.variations && data.variations.map(v => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: v.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 23\n        }\n      }, v.name), /*#__PURE__*/React.createElement(Item.Group, {\n        divided: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 23\n        }\n      }, v.item_variations.map(iv => {\n        return /*#__PURE__*/React.createElement(Item, {\n          key: iv.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }\n        }, iv.attachment && /*#__PURE__*/React.createElement(Item.Image, {\n          size: \"tiny\",\n          src: `http://127.0.0.1:8000${iv.attachment}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(Item.Content, {\n          verticalAlign: \"middle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 31\n          }\n        }, iv.value));\n      })));\n    })))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCart: () => dispatch(fetchCart())\n  };\n};\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProductDetail));","map":{"version":3,"sources":["C:/Users/Alexander/Desktop/important/ecommerceproject/root/src/containers/ProductDetail.js"],"names":["React","axios","withRouter","connect","Button","Card","Container","Dimmer","Divider","Form","Grid","Header","Icon","Image","Item","Label","Loader","Message","Segment","Select","productDetailURL","addToCartURL","authAxios","fetchCart","ProductDetail","Component","state","loading","error","data","formVisible","handleToggleForm","setState","handleFetchItem","match","params","props","console","log","productID","get","then","res","catch","err","handleAddToCart","slug","post","componentDidMount","render","item","JSON","stringify","image","title","category","description","variations","map","v","name","toLowerCase","id","handleChange","item_variations","key","text","value","iv","attachment","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Dimmer,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Item,\r\n  Label,\r\n  Loader,\r\n  Message,\r\n  Segment,\r\n  Select,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { productDetailURL, addToCartURL } from \"./constants\";\r\n\r\nimport { authAxios } from \"../Utils\";\r\n\r\nimport { fetchCart } from \"../store/actions/Cart\";\r\n\r\nclass ProductDetail extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    error: null,\r\n    data: [],\r\n    formVisible: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleFetchItem();\r\n  }\r\n\r\n  handleToggleForm = () => {\r\n    const { formVisible } = this.state;\r\n    this.setState({ formVisible: !formVisible });\r\n  };\r\n  handleFetchItem = () => {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    this.setState({ loading: true });\r\n    console.log(\"asdasdasdasdasdasd\", productDetailURL(params.productID));\r\n    axios\r\n      .get(productDetailURL(params.productID))\r\n      .then((res) => {\r\n        this.setState({ data: res.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err, loading: false });\r\n      });\r\n  };\r\n\r\n  handleAddToCart = (slug) => {\r\n    this.setState({ loading: true });\r\n    authAxios\r\n      .post(addToCartURL, { slug })\r\n      .then((res) => {\r\n        this.props.fetchCart();\r\n        this.setState({ loading: false });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err, loading: false });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { data, error, formVisible, loading } = this.state;\r\n    const item = data;\r\n    console.log(\"data\", item);\r\n\r\n    return (\r\n      <Container>\r\n        {error && (\r\n          <Message\r\n            error\r\n            header=\"There was some errors with your submission\"\r\n            content={JSON.stringify(error)}\r\n          />\r\n        )}\r\n        {loading && (\r\n          <Segment>\r\n            <Dimmer active inverted>\r\n              <Loader inverted>Loading</Loader>\r\n            </Dimmer>\r\n\r\n            <Image src=\"/images/wireframe/short-paragraph.png\" />\r\n          </Segment>\r\n        )}\r\n        <Grid columns={2} divided>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Card\r\n                fluid\r\n                image={item.image}\r\n                header={item.title}\r\n                meta={\r\n                  <React.Fragment>\r\n                    {item.category}\r\n\r\n                    {/* {item.discount_price && (\r\n                      <Label\r\n                        color={\r\n                          item.label === \"primary\"\r\n                            ? \"blue\"\r\n                            : item.label === \"secondary\"\r\n                            ? \"green\"\r\n                            : \"olive\"\r\n                        }\r\n                      >\r\n                        {item.label}\r\n                      </Label>\r\n                    )} */}\r\n                  </React.Fragment>\r\n                }\r\n                description={item.description}\r\n                extra={\r\n                  <React.Fragment>\r\n                    <Button\r\n                      fluid\r\n                      color=\"yellow\"\r\n                      floated=\"right\"\r\n                      icon\r\n                      labelPosition=\"right\"\r\n                      onClick={this.handleToggleForm}\r\n                    >\r\n                      Add to cart.\r\n                      <Icon name=\"cart plus\" />\r\n                    </Button>\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n              {formVisible && (\r\n                <Form>\r\n                  <React.Fragment>\r\n                    <Divider />\r\n                    {data.variations.map((v) => {\r\n                      const { name } = v.name.toLowerCase();\r\n                      return (\r\n                        <Form.Field key={v.id}>\r\n                          <Select\r\n                            name={name}\r\n                            onChange={this.handleChange}\r\n                            options={v.item_variations.map((item) => {\r\n                              return {\r\n                                key: item.id,\r\n                                text: item.value,\r\n                                value: item.id,\r\n                              };\r\n                            })}\r\n                            placeholder={`Choose a ${name}`}\r\n                            selection\r\n                            // value={value}\r\n                          />\r\n                        </Form.Field>\r\n                      );\r\n                    })}\r\n\r\n                    <Form.Button\r\n                      onClick={() => this.handleAddToCart(item.slug)}\r\n                    >\r\n                      Submit\r\n                    </Form.Button>\r\n                  </React.Fragment>\r\n                </Form>\r\n              )}\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Header as=\"h2\">Try different variations</Header>\r\n              {data.variations &&\r\n                data.variations.map((v) => {\r\n                  return (\r\n                    <React.Fragment key={v.id}>\r\n                      <Header as=\"h3\">{v.name}</Header>\r\n                      <Item.Group divided>\r\n                        {v.item_variations.map((iv) => {\r\n                          return (\r\n                            <Item key={iv.id}>\r\n                              {iv.attachment && (\r\n                                <Item.Image\r\n                                  size=\"tiny\"\r\n                                  src={`http://127.0.0.1:8000${iv.attachment}`}\r\n                                />\r\n                              )}\r\n                              <Item.Content verticalAlign=\"middle\">\r\n                                {iv.value}\r\n                              </Item.Content>\r\n                            </Item>\r\n                          );\r\n                        })}\r\n                      </Item.Group>\r\n                    </React.Fragment>\r\n                  );\r\n                })}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCart: () => dispatch(fetchCart()),\r\n  };\r\n};\r\nexport default withRouter(connect(null, mapDispatchToProps)(ProductDetail));\r\n"]},"metadata":{},"sourceType":"module"}