{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommerceproject\\\\root\\\\frontend\\\\src\\\\containers\\\\AddressForm.js\";\nimport React from \"react\";\nimport { Form, Select, Message } from \"semantic-ui-react\";\nimport { addressCreateURL, addressUpdateURL } from \"./constants\";\nimport { authAxios } from \"../Utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        address_type: \"\",\n        apartment_address: \"\",\n        country: \"\",\n        default: false,\n        id: \"\",\n        street_address: \"\",\n        user: 1,\n        zip: \"\"\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      }); // e.preventDefault();\n\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n\n      this.setState({\n        formData: {\n          address_type: \"\",\n          apartment_address: \"\",\n          country: \"\",\n          default: false,\n          id: \"\",\n          street_address: \"\",\n          user: 1,\n          zip: \"\"\n        },\n        succes: f\n      });\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    const {\n      countries\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"street_address\",\n      placeholder: \"Street address\",\n      onChange: this.handleChange,\n      value: formData.street_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"apartment_address\",\n      placeholder: \"Apartment address\",\n      onChange: this.handleChange,\n      value: formData.apartment_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      loading: countries.length < 1,\n      fluid: true,\n      clearable: true,\n      search: true,\n      options: countries,\n      name: \"country\",\n      placeholder: \"Country\",\n      onChange: this.handleSelectChange,\n      value: formData.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"zip\",\n      placeholder: \"Zip code\",\n      onChange: this.handleChange,\n      value: formData.zip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address?\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      disabled: saving,\n      loading: saving,\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, \"Save\"));\n  }\n\n}\n\nexport default AddressForm;","map":{"version":3,"sources":["C:/Users/Alexander/Desktop/important/ecommerceproject/root/frontend/src/containers/AddressForm.js"],"names":["React","Form","Select","Message","addressCreateURL","addressUpdateURL","authAxios","UPDATE_FORM","CREATE_FORM","AddressForm","Component","state","error","loading","formData","address_type","apartment_address","country","default","id","street_address","user","zip","saving","success","handleToggleDefault","updatedFormdata","setState","handleChange","e","target","name","value","handleSelectChange","handleSubmit","formType","props","handleUpdateAddress","handleCreateAddress","succes","f","userID","activeItem","post","then","res","callback","catch","err","put","componentDidMount","address","render","countries","length","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,QAAsC,mBAAtC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,aAAnD;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,YAAY,EAAE,EADN;AAERC,QAAAA,iBAAiB,EAAE,EAFX;AAGRC,QAAAA,OAAO,EAAE,EAHD;AAIRC,QAAAA,OAAO,EAAE,KAJD;AAKRC,QAAAA,EAAE,EAAE,EALI;AAMRC,QAAAA,cAAc,EAAE,EANR;AAORC,QAAAA,IAAI,EAAE,CAPE;AAQRC,QAAAA,GAAG,EAAE;AARG,OAHJ;AAaNC,MAAAA,MAAM,EAAE,KAbF;AAcNC,MAAAA,OAAO,EAAE;AAdH,KADgC;;AAAA,SAyBxCC,mBAzBwC,GAyBlB,MAAM;AAC1B,YAAM;AAAEX,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMe,eAAe,GAAG,EACtB,GAAGZ,QADmB;AAEtBI,QAAAA,OAAO,EAAE,CAACJ,QAAQ,CAACI;AAFG,OAAxB;AAIA,WAAKS,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAEY;AADE,OAAd;AAGD,KAlCuC;;AAAA,SAoCxCE,YApCwC,GAoCxBC,CAAD,IAAO;AACpB,YAAM;AAAEf,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMe,eAAe,GAAG,EACtB,GAAGZ,QADmB;AAEtB,SAACe,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFJ,OAAxB;AAIA,WAAKL,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAEY;AADE,OAAd;AAGD,KA7CuC;;AAAA,SA+CxCO,kBA/CwC,GA+CnB,CAACJ,CAAD,EAAI;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAJ,KAAwB;AAC3C,YAAM;AAAElB,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMe,eAAe,GAAG,EACtB,GAAGZ,QADmB;AAEtB,SAACiB,IAAD,GAAQC;AAFc,OAAxB;AAIA,WAAKL,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAEY;AADE,OAAd;AAGD,KAxDuC;;AAAA,SA0DxCQ,YA1DwC,GA0DxBL,CAAD,IAAO;AACpB,WAAKF,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAE;AAAV,OAAd,EADoB,CAEpB;;AACA,YAAM;AAAEY,QAAAA;AAAF,UAAe,KAAKC,KAA1B;;AACA,UAAID,QAAQ,KAAK5B,WAAjB,EAA8B;AAC5B,aAAK8B,mBAAL;AACD,OAFD,MAEO;AACL,aAAKC,mBAAL;AACD;;AAED,WAAKX,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAE;AACRC,UAAAA,YAAY,EAAE,EADN;AAERC,UAAAA,iBAAiB,EAAE,EAFX;AAGRC,UAAAA,OAAO,EAAE,EAHD;AAIRC,UAAAA,OAAO,EAAE,KAJD;AAKRC,UAAAA,EAAE,EAAE,EALI;AAMRC,UAAAA,cAAc,EAAE,EANR;AAORC,UAAAA,IAAI,EAAE,CAPE;AAQRC,UAAAA,GAAG,EAAE;AARG,SADE;AAWZiB,QAAAA,MAAM,EAACC;AAXK,OAAd;AAaD,KAjFuC;;AAAA,SAmFxCF,mBAnFwC,GAmFlB,MAAM;AAC1B,YAAM;AAAEG,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAyB,KAAKN,KAApC;AACA,YAAM;AAAEtB,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACAL,MAAAA,SAAS,CACNqC,IADH,CACQvC,gBADR,EAC0B,EACtB,GAAGU,QADmB;AAEtBO,QAAAA,IAAI,EAAEoB,MAFgB;AAGtB1B,QAAAA,YAAY,EAAE2B,UAAU,KAAK,gBAAf,GAAkC,GAAlC,GAAwC;AAHhC,OAD1B,EAMGE,IANH,CAMSC,GAAD,IAAS;AACb,aAAKlB,QAAL,CAAc;AACZJ,UAAAA,MAAM,EAAE,KADI;AAEZC,UAAAA,OAAO,EAAE,IAFG;AAGZV,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,OAAO,EAAE;AAAX;AAHE,SAAd;AAKA,aAAKkB,KAAL,CAAWU,QAAX;AACD,OAbH,EAcGC,KAdH,CAcUC,GAAD,IAAS;AACd,aAAKrB,QAAL,CAAc;AAAEf,UAAAA,KAAK,EAAEoC;AAAT,SAAd;AACD,OAhBH;AAiBD,KAvGuC;;AAAA,SAyGxCX,mBAzGwC,GAyGlB,MAAM;AAC1B,YAAM;AAAEI,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAyB,KAAKN,KAApC;AACA,YAAM;AAAEtB,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACAL,MAAAA,SAAS,CACN2C,GADH,CACO5C,gBAAgB,CAACS,QAAQ,CAACK,EAAV,CADvB,EACsC,EAClC,GAAGL,QAD+B;AAElCO,QAAAA,IAAI,EAAEoB,MAF4B;AAGlC1B,QAAAA,YAAY,EAAE2B,UAAU,KAAK,gBAAf,GAAkC,GAAlC,GAAwC;AAHpB,OADtC,EAMGE,IANH,CAMSC,GAAD,IAAS;AACb,aAAKlB,QAAL,CAAc;AACZJ,UAAAA,MAAM,EAAE,KADI;AAEZC,UAAAA,OAAO,EAAE,IAFG;AAGZV,UAAAA,QAAQ,EAAE;AAAEI,YAAAA,OAAO,EAAE;AAAX;AAHE,SAAd;AAKA,aAAKkB,KAAL,CAAWU,QAAX;AACD,OAbH,EAcGC,KAdH,CAcUC,GAAD,IAAS;AACd,aAAKrB,QAAL,CAAc;AAAEf,UAAAA,KAAK,EAAEoC;AAAT,SAAd;AACD,OAhBH;AAiBD,KA7HuC;AAAA;;AAkBxCE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,OAAF;AAAWhB,MAAAA;AAAX,QAAwB,KAAKC,KAAnC;;AACA,QAAID,QAAQ,KAAK5B,WAAjB,EAA8B;AAC5B,WAAKoB,QAAL,CAAc;AAAEb,QAAAA,QAAQ,EAAEqC;AAAZ,OAAd;AACD;AACF;;AAwGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKjB,KAA3B;AACA,UAAM;AAAExB,MAAAA,KAAF;AAASE,MAAAA,QAAT;AAAmBU,MAAAA,OAAnB;AAA4BD,MAAAA;AAA5B,QAAuC,KAAKZ,KAAlD;AACA,wBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKuB,YAArB;AAAmC,MAAA,OAAO,EAAEV,OAA5C;AAAqD,MAAA,KAAK,EAAEZ,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,gBAFP;AAGE,MAAA,WAAW,EAAC,gBAHd;AAIE,MAAA,QAAQ,EAAE,KAAKgB,YAJjB;AAKE,MAAA,KAAK,EAAEd,QAAQ,CAACM,cALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,mBAFP;AAGE,MAAA,WAAW,EAAC,mBAHd;AAIE,MAAA,QAAQ,EAAE,KAAKQ,YAJjB;AAKE,MAAA,KAAK,EAAEd,QAAQ,CAACE,iBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,eAeE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEqC,SAAS,CAACC,MAAV,GAAmB,CAD9B;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,MAAM,MAJR;AAKE,MAAA,OAAO,EAAED,SALX;AAME,MAAA,IAAI,EAAC,SANP;AAOE,MAAA,WAAW,EAAC,SAPd;AAQE,MAAA,QAAQ,EAAE,KAAKpB,kBARjB;AASE,MAAA,KAAK,EAAEnB,QAAQ,CAACG,OATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfF,eA4BE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,WAAW,EAAC,UAHd;AAIE,MAAA,QAAQ,EAAE,KAAKW,YAJjB;AAKE,MAAA,KAAK,EAAEd,QAAQ,CAACQ,GALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,eAmCE,oBAAC,IAAD,CAAM,QAAN;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,KAAK,EAAC,gCAFR;AAGE,MAAA,QAAQ,EAAE,KAAKG,mBAHjB;AAIE,MAAA,OAAO,EAAEX,QAAQ,CAACI,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,EAyCGM,OAAO,iBACN,oBAAC,OAAD;AAAS,MAAA,OAAO,MAAhB;AAAiB,MAAA,MAAM,EAAC,UAAxB;AAAmC,MAAA,OAAO,EAAC,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CJ,EA4CGZ,KAAK,iBACJ,oBAAC,OAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,MAAM,EAAC,oBAFT;AAGE,MAAA,OAAO,EAAE2C,IAAI,CAACC,SAAL,CAAe5C,KAAf,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CJ,eAmDE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,QAAQ,EAAEW,MAAvB;AAA+B,MAAA,OAAO,EAAEA,MAAxC;AAAgD,MAAA,SAAS,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDF,CADF;AAyDD;;AA3LuC;;AA6L1C,eAAed,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Form, Select, Message } from \"semantic-ui-react\";\r\nimport { addressCreateURL, addressUpdateURL } from \"./constants\";\r\nimport { authAxios } from \"../Utils\";\r\n\r\nconst UPDATE_FORM = \"UPDATE_FORM\";\r\nconst CREATE_FORM = \"CREATE_FORM\";\r\n\r\nclass AddressForm extends React.Component {\r\n  state = {\r\n    error: null,\r\n    loading: false,\r\n    formData: {\r\n      address_type: \"\",\r\n      apartment_address: \"\",\r\n      country: \"\",\r\n      default: false,\r\n      id: \"\",\r\n      street_address: \"\",\r\n      user: 1,\r\n      zip: \"\",\r\n    },\r\n    saving: false,\r\n    success: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { address, formType } = this.props;\r\n    if (formType === UPDATE_FORM) {\r\n      this.setState({ formData: address });\r\n    }\r\n  }\r\n\r\n  handleToggleDefault = () => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      default: !formData.default,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleSelectChange = (e, { name, value }) => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      [name]: value,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    this.setState({ saving: true });\r\n    // e.preventDefault();\r\n    const { formType } = this.props;\r\n    if (formType === UPDATE_FORM) {\r\n      this.handleUpdateAddress();\r\n    } else {\r\n      this.handleCreateAddress();\r\n    }\r\n\r\n    this.setState({\r\n      formData: {\r\n        address_type: \"\",\r\n        apartment_address: \"\",\r\n        country: \"\",\r\n        default: false,\r\n        id: \"\",\r\n        street_address: \"\",\r\n        user: 1,\r\n        zip: \"\",\r\n      },\r\n      succes:f\r\n    });\r\n  };\r\n\r\n  handleCreateAddress = () => {\r\n    const { userID, activeItem } = this.props;\r\n    const { formData } = this.state;\r\n    authAxios\r\n      .post(addressCreateURL, {\r\n        ...formData,\r\n        user: userID,\r\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          saving: false,\r\n          success: true,\r\n          formData: { default: false },\r\n        });\r\n        this.props.callback();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleUpdateAddress = () => {\r\n    const { userID, activeItem } = this.props;\r\n    const { formData } = this.state;\r\n    authAxios\r\n      .put(addressUpdateURL(formData.id), {\r\n        ...formData,\r\n        user: userID,\r\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          saving: false,\r\n          success: true,\r\n          formData: { default: false },\r\n        });\r\n        this.props.callback();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { countries } = this.props;\r\n    const { error, formData, success, saving } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} success={success} error={error}>\r\n        <Form.Input\r\n          required\r\n          name=\"street_address\"\r\n          placeholder=\"Street address\"\r\n          onChange={this.handleChange}\r\n          value={formData.street_address}\r\n        />\r\n        <Form.Input\r\n          required\r\n          name=\"apartment_address\"\r\n          placeholder=\"Apartment address\"\r\n          onChange={this.handleChange}\r\n          value={formData.apartment_address}\r\n        />\r\n        <Form.Field required>\r\n          <Select\r\n            loading={countries.length < 1}\r\n            fluid\r\n            clearable\r\n            search\r\n            options={countries}\r\n            name=\"country\"\r\n            placeholder=\"Country\"\r\n            onChange={this.handleSelectChange}\r\n            value={formData.country}\r\n          />\r\n        </Form.Field>\r\n        <Form.Input\r\n          required\r\n          name=\"zip\"\r\n          placeholder=\"Zip code\"\r\n          onChange={this.handleChange}\r\n          value={formData.zip}\r\n        />\r\n        <Form.Checkbox\r\n          name=\"default\"\r\n          label=\"Make this the default address?\"\r\n          onChange={this.handleToggleDefault}\r\n          checked={formData.default}\r\n        />\r\n        {success && (\r\n          <Message success header=\"Success!\" content=\"Your address was saved\" />\r\n        )}\r\n        {error && (\r\n          <Message\r\n            error\r\n            header=\"There was an error\"\r\n            content={JSON.stringify(error)}\r\n          />\r\n        )}\r\n        <Form.Button disabled={saving} loading={saving} secondary>\r\n          Save\r\n        </Form.Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default AddressForm;\r\n"]},"metadata":{},"sourceType":"module"}