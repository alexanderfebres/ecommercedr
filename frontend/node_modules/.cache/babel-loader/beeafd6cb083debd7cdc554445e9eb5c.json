{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommerceproject\\\\root\\\\src\\\\containers\\\\Profile.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select, Table } from \"semantic-ui-react\";\nimport { countryListURL, addressListURL, addressCreateURL, addressUpdateURL, addressDeleteURL, userIDURL, paymentListURL } from \"./constants\";\nimport { authAxios } from \"../Utils\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass PaymentHistory extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      payments: []\n    };\n\n    this.handleFetchPayments = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(paymentListURL).then(res => {\n        this.setState({\n          loading: false,\n          payments: res.data\n        });\n      }).catch(err => {\n        this.setState({\n          error: err,\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchPayments();\n  }\n\n  render() {\n    const {\n      payments\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"ID\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Date\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, payments.map(p => {\n      return /*#__PURE__*/React.createElement(Table.Row, {\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, p.id), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"$\", p.amount), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, new Date(p.timestamp).toUTCString()));\n    })));\n  }\n\n}\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: null,\n      loading: false,\n      formData: {\n        address_type: \"\",\n        apartment_address: \"\",\n        country: \"\",\n        default: false,\n        id: \"\",\n        street_address: \"\",\n        user: 1,\n        zip: \"\"\n      },\n      saving: false,\n      success: false\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    const {\n      countries\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"street_address\",\n      placeholder: \"Street address\",\n      onChange: this.handleChange,\n      value: formData.street_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"apartment_address\",\n      placeholder: \"Apartment address\",\n      onChange: this.handleChange,\n      value: formData.apartment_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      loading: countries.length < 1,\n      fluid: true,\n      clearable: true,\n      search: true,\n      options: countries,\n      name: \"country\",\n      placeholder: \"Country\",\n      onChange: this.handleSelectChange,\n      value: formData.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"zip\",\n      placeholder: \"Zip code\",\n      onChange: this.handleChange,\n      value: formData.zip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address?\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }), error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      disabled: saving,\n      loading: saving,\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, \"Save\"));\n  }\n\n}\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"billingAddress\",\n      addresses: [],\n      countries: [],\n      userID: null,\n      selectedAddress: null\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {// this.handleFetchAddresses();\n      });\n    };\n\n    this.handleGetActiveItem = () => {\n      const {\n        activeItem\n      } = this.state;\n\n      if (activeItem === \"billingAddress\") {\n        return \"Billing Address\";\n      } else if (activeItem === \"shippingAddress\") {\n        return \"Shipping Address\";\n      }\n\n      return \"Payment History\";\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleDeleteAddress = addressID => {\n      authAxios.delete(addressDeleteURL(addressID)).then(res => {\n        this.handleCallback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleCallback = () => {\n      this.handleFetchAddresses();\n      this.setState({\n        selectedAddress: null\n      });\n    };\n\n    this.renderAddresses = () => {\n      const {\n        activeItem,\n        addresses,\n        countries,\n        selectedAddress,\n        userID\n      } = this.state;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Card.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 9\n        }\n      }, addresses.map(a => {\n        return /*#__PURE__*/React.createElement(Card, {\n          key: a.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }\n        }, a.default && /*#__PURE__*/React.createElement(Label, {\n          as: \"a\",\n          color: \"blue\",\n          ribbon: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 21\n          }\n        }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 19\n          }\n        }, a.street_address, \", \", a.apartment_address), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 19\n          }\n        }, a.country), /*#__PURE__*/React.createElement(Card.Description, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 19\n          }\n        }, a.zip)), /*#__PURE__*/React.createElement(Card.Content, {\n          extra: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          color: \"yellow\",\n          onClick: () => this.handleSelectAddress(a),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 19\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          color: \"red\",\n          onClick: () => this.handleDeleteAddress(a.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 19\n          }\n        }, \"Delete\")));\n      })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 33\n        }\n      }) : null, selectedAddress === null ? /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        countries: countries,\n        formType: CREATE_FORM,\n        userID: userID,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }\n      }) : null, selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n        activeItem: activeItem,\n        userID: userID,\n        countries: countries,\n        address: selectedAddress,\n        formType: UPDATE_FORM,\n        callback: this.handleCallback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    // this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      error,\n      loading\n    } = this.state;\n    const {\n      isAuthenticated\n    } = this.props;\n\n    if (!isAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 15\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 19\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      pointing: true,\n      vertical: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Billing Address\",\n      active: activeItem === \"billingAddress\",\n      onClick: () => this.handleItemClick(\"billingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Shipping Address\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Payment history\",\n      active: activeItem === \"paymentHistory\",\n      onClick: () => this.handleItemClick(\"paymentHistory\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }\n    }, this.handleGetActiveItem()), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 13\n      }\n    }), activeItem === \"paymentHistory\" ? /*#__PURE__*/React.createElement(PaymentHistory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 15\n      }\n    }) : this.renderAddresses())));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAddresses\n  };\n};\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["C:/Users/Alexander/Desktop/important/ecommerceproject/root/src/containers/Profile.js"],"names":["React","connect","Redirect","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","Table","countryListURL","addressListURL","addressCreateURL","addressUpdateURL","addressDeleteURL","userIDURL","paymentListURL","authAxios","UPDATE_FORM","CREATE_FORM","PaymentHistory","Component","state","payments","handleFetchPayments","setState","loading","get","then","res","data","catch","err","error","componentDidMount","render","map","p","id","amount","Date","timestamp","toUTCString","AddressForm","formData","address_type","apartment_address","country","default","street_address","user","zip","saving","success","handleToggleDefault","updatedFormdata","handleChange","e","target","name","value","handleSelectChange","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","userID","activeItem","post","callback","put","address","countries","length","JSON","stringify","Profile","addresses","selectedAddress","handleItemClick","handleGetActiveItem","handleFormatCountries","keys","Object","k","key","text","handleDeleteAddress","addressID","delete","handleCallback","handleSelectAddress","handleFetchUserID","handleFetchCountries","handleFetchAddresses","renderAddresses","a","isAuthenticated","mapStateToProps","auth","token","mapDispatchToProps","dispatch","fetchAddresses"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Dimmer,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Label,\r\n  Loader,\r\n  Menu,\r\n  Message,\r\n  Segment,\r\n  Select,\r\n  Table,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  countryListURL,\r\n  addressListURL,\r\n  addressCreateURL,\r\n  addressUpdateURL,\r\n  addressDeleteURL,\r\n  userIDURL,\r\n  paymentListURL,\r\n} from \"./constants\";\r\nimport { authAxios } from \"../Utils\";\r\n\r\nconst UPDATE_FORM = \"UPDATE_FORM\";\r\nconst CREATE_FORM = \"CREATE_FORM\";\r\n\r\nclass PaymentHistory extends React.Component {\r\n  state = {\r\n    payments: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleFetchPayments();\r\n  }\r\n\r\n  handleFetchPayments = () => {\r\n    this.setState({ loading: true });\r\n    authAxios\r\n      .get(paymentListURL)\r\n      .then((res) => {\r\n        this.setState({\r\n          loading: false,\r\n          payments: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err, loading: false });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { payments } = this.state;\r\n    return (\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>ID</Table.HeaderCell>\r\n            <Table.HeaderCell>Amount</Table.HeaderCell>\r\n            <Table.HeaderCell>Date</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {payments.map((p) => {\r\n            return (\r\n              <Table.Row key={p.id}>\r\n                <Table.Cell>{p.id}</Table.Cell>\r\n                <Table.Cell>${p.amount}</Table.Cell>\r\n                <Table.Cell>{new Date(p.timestamp).toUTCString()}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nclass AddressForm extends React.Component {\r\n  state = {\r\n    error: null,\r\n    loading: false,\r\n    formData: {\r\n      address_type: \"\",\r\n      apartment_address: \"\",\r\n      country: \"\",\r\n      default: false,\r\n      id: \"\",\r\n      street_address: \"\",\r\n      user: 1,\r\n      zip: \"\",\r\n    },\r\n    saving: false,\r\n    success: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { address, formType } = this.props;\r\n    if (formType === UPDATE_FORM) {\r\n      this.setState({ formData: address });\r\n    }\r\n  }\r\n\r\n  handleToggleDefault = () => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      default: !formData.default,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleSelectChange = (e, { name, value }) => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      [name]: value,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    this.setState({ saving: true });\r\n    e.preventDefault();\r\n    const { formType } = this.props;\r\n    if (formType === UPDATE_FORM) {\r\n      this.handleUpdateAddress();\r\n    } else {\r\n      this.handleCreateAddress();\r\n    }\r\n  };\r\n\r\n  handleCreateAddress = () => {\r\n    const { userID, activeItem } = this.props;\r\n    const { formData } = this.state;\r\n    authAxios\r\n      .post(addressCreateURL, {\r\n        ...formData,\r\n        user: userID,\r\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          saving: false,\r\n          success: true,\r\n          formData: { default: false },\r\n        });\r\n        this.props.callback();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleUpdateAddress = () => {\r\n    const { userID, activeItem } = this.props;\r\n    const { formData } = this.state;\r\n    authAxios\r\n      .put(addressUpdateURL(formData.id), {\r\n        ...formData,\r\n        user: userID,\r\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          saving: false,\r\n          success: true,\r\n          formData: { default: false },\r\n        });\r\n        this.props.callback();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { countries } = this.props;\r\n    const { error, formData, success, saving } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} success={success} error={error}>\r\n        <Form.Input\r\n          required\r\n          name=\"street_address\"\r\n          placeholder=\"Street address\"\r\n          onChange={this.handleChange}\r\n          value={formData.street_address}\r\n        />\r\n        <Form.Input\r\n          required\r\n          name=\"apartment_address\"\r\n          placeholder=\"Apartment address\"\r\n          onChange={this.handleChange}\r\n          value={formData.apartment_address}\r\n        />\r\n        <Form.Field required>\r\n          <Select\r\n            loading={countries.length < 1}\r\n            fluid\r\n            clearable\r\n            search\r\n            options={countries}\r\n            name=\"country\"\r\n            placeholder=\"Country\"\r\n            onChange={this.handleSelectChange}\r\n            value={formData.country}\r\n          />\r\n        </Form.Field>\r\n        <Form.Input\r\n          required\r\n          name=\"zip\"\r\n          placeholder=\"Zip code\"\r\n          onChange={this.handleChange}\r\n          value={formData.zip}\r\n        />\r\n        <Form.Checkbox\r\n          name=\"default\"\r\n          label=\"Make this the default address?\"\r\n          onChange={this.handleToggleDefault}\r\n          checked={formData.default}\r\n        />\r\n        {success && (\r\n          <Message success header=\"Success!\" content=\"Your address was saved\" />\r\n        )}\r\n        {error && (\r\n          <Message\r\n            error\r\n            header=\"There was an error\"\r\n            content={JSON.stringify(error)}\r\n          />\r\n        )}\r\n        <Form.Button disabled={saving} loading={saving} secondary>\r\n          Save\r\n        </Form.Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nclass Profile extends React.Component {\r\n  state = {\r\n    activeItem: \"billingAddress\",\r\n    addresses: [],\r\n    countries: [],\r\n    userID: null,\r\n    selectedAddress: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // this.handleFetchAddresses();\r\n    this.handleFetchCountries();\r\n    this.handleFetchUserID();\r\n  }\r\n\r\n  handleItemClick = (name) => {\r\n    this.setState({ activeItem: name }, () => {\r\n      // this.handleFetchAddresses();\r\n    });\r\n  };\r\n\r\n  handleGetActiveItem = () => {\r\n    const { activeItem } = this.state;\r\n    if (activeItem === \"billingAddress\") {\r\n      return \"Billing Address\";\r\n    } else if (activeItem === \"shippingAddress\") {\r\n      return \"Shipping Address\";\r\n    }\r\n    return \"Payment History\";\r\n  };\r\n\r\n  handleFormatCountries = (countries) => {\r\n    const keys = Object.keys(countries);\r\n    return keys.map((k) => {\r\n      return {\r\n        key: k,\r\n        text: countries[k],\r\n        value: k,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleDeleteAddress = (addressID) => {\r\n    authAxios\r\n      .delete(addressDeleteURL(addressID))\r\n      .then((res) => {\r\n        this.handleCallback();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleSelectAddress = (address) => {\r\n    this.setState({ selectedAddress: address });\r\n  };\r\n\r\n  handleFetchUserID = () => {\r\n    authAxios\r\n      .get(userIDURL)\r\n      .then((res) => {\r\n        this.setState({ userID: res.data.userID });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleFetchCountries = () => {\r\n    authAxios\r\n      .get(countryListURL)\r\n      .then((res) => {\r\n        this.setState({ countries: this.handleFormatCountries(res.data) });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  // handleFetchAddresses = () => {\r\n  //   this.setState({ loading: true });\r\n  //   const { activeItem } = this.state;\r\n  //   authAxios\r\n  //     .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\r\n  //     .then((res) => {\r\n  //       this.setState({ addresses: res.data, loading: false });\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       this.setState({ error: err });\r\n  //     });\r\n  // };\r\n\r\n  handleCallback = () => {\r\n    this.handleFetchAddresses();\r\n    this.setState({ selectedAddress: null });\r\n  };\r\n\r\n  renderAddresses = () => {\r\n    const {\r\n      activeItem,\r\n      addresses,\r\n      countries,\r\n      selectedAddress,\r\n      userID,\r\n    } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card.Group>\r\n          {addresses.map((a) => {\r\n            return (\r\n              <Card key={a.id}>\r\n                <Card.Content>\r\n                  {a.default && (\r\n                    <Label as=\"a\" color=\"blue\" ribbon=\"right\">\r\n                      Default\r\n                    </Label>\r\n                  )}\r\n                  <Card.Header>\r\n                    {a.street_address}, {a.apartment_address}\r\n                  </Card.Header>\r\n                  <Card.Meta>{a.country}</Card.Meta>\r\n                  <Card.Description>{a.zip}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                  <Button\r\n                    color=\"yellow\"\r\n                    onClick={() => this.handleSelectAddress(a)}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                  <Button\r\n                    color=\"red\"\r\n                    onClick={() => this.handleDeleteAddress(a.id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Card.Content>\r\n              </Card>\r\n            );\r\n          })}\r\n        </Card.Group>\r\n        {addresses.length > 0 ? <Divider /> : null}\r\n        {selectedAddress === null ? (\r\n          <AddressForm\r\n            activeItem={activeItem}\r\n            countries={countries}\r\n            formType={CREATE_FORM}\r\n            userID={userID}\r\n            callback={this.handleCallback}\r\n          />\r\n        ) : null}\r\n        {selectedAddress && (\r\n          <AddressForm\r\n            activeItem={activeItem}\r\n            userID={userID}\r\n            countries={countries}\r\n            address={selectedAddress}\r\n            formType={UPDATE_FORM}\r\n            callback={this.handleCallback}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { activeItem, error, loading } = this.state;\r\n    const { isAuthenticated } = this.props;\r\n    if (!isAuthenticated) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <Grid container columns={2} divided>\r\n        <Grid.Row columns={1}>\r\n          <Grid.Column>\r\n            {error && (\r\n              <Message\r\n                error\r\n                header=\"There was an error\"\r\n                content={JSON.stringify(error)}\r\n              />\r\n            )}\r\n            {loading && (\r\n              <Segment>\r\n                <Dimmer active inverted>\r\n                  <Loader inverted>Loading</Loader>\r\n                </Dimmer>\r\n                <Image src=\"/images/wireframe/short-paragraph.png\" />\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column width={6}>\r\n            <Menu pointing vertical fluid>\r\n              <Menu.Item\r\n                name=\"Billing Address\"\r\n                active={activeItem === \"billingAddress\"}\r\n                onClick={() => this.handleItemClick(\"billingAddress\")}\r\n              />\r\n              <Menu.Item\r\n                name=\"Shipping Address\"\r\n                active={activeItem === \"shippingAddress\"}\r\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\r\n              />\r\n              <Menu.Item\r\n                name=\"Payment history\"\r\n                active={activeItem === \"paymentHistory\"}\r\n                onClick={() => this.handleItemClick(\"paymentHistory\")}\r\n              />\r\n            </Menu>\r\n          </Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Header>{this.handleGetActiveItem()}</Header>\r\n            <Divider />\r\n            {activeItem === \"paymentHistory\" ? (\r\n              <PaymentHistory />\r\n            ) : (\r\n              this.renderAddresses()\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAddresses\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n"]},"metadata":{},"sourceType":"module"}