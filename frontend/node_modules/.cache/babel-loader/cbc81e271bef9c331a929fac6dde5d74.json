{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Desktop\\\\django-react-boilerplate\\\\root\\\\src\\\\containers\\\\Checkout.js\";\nimport React from \"react\";\nimport { CardElement, ElementsConsumer } from \"@stripe/react-stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Button, Container, Divider, Header, Item, Loader, Message } from \"semantic-ui-react\";\nimport { checkoutURL, orderSummaryURL } from \"../containers/constants\";\nimport { authAxios } from \"../Utils\";\nconst stripePromise = loadStripe(\"pk_test_51Ha0vNGV70HGHFAGYq6tdL9DjEXnL6uslIYoVA7TLvwLhW1EHWUWiMh0KM4PEkxkzCsy6Y0mbkjAdXCBzlPzJVbx00Mtss3kPN\");\n\nclass OrderPreview extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleFetchOrder = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(orderSummaryURL).then(res => {\n        this.setState({\n          data: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        if (err.response.status === 404) {\n          this.setState({\n            error: \"You currently do not have an active order\",\n            loading: false\n          });\n        } else {\n          this.setState({\n            error: err,\n            loading: false\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchOrder();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Item.Group, {\n      relaxed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Item.Image, {\n      size: \"tiny\",\n      src: \"/images/wireframe/image.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Item.Content, {\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Item.Header, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, \"12 Years a Slave\"))), /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Item.Image, {\n      size: \"tiny\",\n      src: \"/images/wireframe/image.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Item.Content, {\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Item.Header, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"My Neighbor Totoro\"))), /*#__PURE__*/React.createElement(Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Item.Image, {\n      size: \"tiny\",\n      src: \"/images/wireframe/image.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Item.Content, {\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Item.Header, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"Watchmen\")))), /*#__PURE__*/React.createElement(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Item.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Item.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Order Total: $xx\"))));\n  }\n\n}\n\nclass CheckoutForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      error: null,\n      success: false\n    };\n\n    this.handleSubmit = async event => {\n      // Block native form submission.\n      event.preventDefault();\n      const {\n        stripe,\n        elements\n      } = this.props;\n\n      if (!stripe || !elements) {\n        // Stripe.js has not loaded yet. Make sure to disable\n        // form submission until Stripe.js has loaded.\n        return;\n      }\n\n      this.setState({\n        loading: true\n      }); // Get a reference to a mounted CardElement. Elements knows how\n      // to find your CardElement because there can only ever be one of\n      // each type of element.\n\n      const cardElement = elements.getElement(CardElement);\n      const {\n        error,\n        paymentMethod\n      } = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: cardElement\n      });\n      authAxios.post(checkoutURL, {\n        stripeToken: paymentMethod.card\n      }).then(res => {\n        this.setState({\n          loading: false,\n          success: true\n        });\n      }).catch(err => {\n        this.setState({\n          loading: false,\n          error: err\n        });\n      });\n\n      if (error) {\n        console.log(\"[error]\", error);\n      } else {\n        console.log(\"[PaymentMethod]\", paymentMethod);\n      }\n    };\n  }\n\n  render() {\n    const {\n      stripe\n    } = this.props;\n    const {\n      error,\n      loading,\n      success\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      negative: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, \"Your payment was unsuccessful\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, JSON.stringify(error))), success && /*#__PURE__*/React.createElement(Message, {\n      positive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Message.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, \"Your payment was successful\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, \"Go to you profile \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, \"profile\"), \" to see the order delivery status.\")), /*#__PURE__*/React.createElement(OrderPreview, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, \"Would you like to complete the purshase ?\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardElement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      primary: true,\n      type: \"submit\",\n      disabled: !stripe,\n      style: {\n        marginTop: \"10px\"\n      } // loading={loading}\n      // disabled={loading}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, \"Pay\")));\n  }\n\n}\n\nconst InjectedCheckoutForm = () => {\n  return /*#__PURE__*/React.createElement(Container, {\n    text: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, \"Complete your Order\"), /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ElementsConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, ({\n    elements,\n    stripe\n  }) => /*#__PURE__*/React.createElement(CheckoutForm, {\n    elements: elements,\n    stripe: stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default InjectedCheckoutForm;","map":{"version":3,"sources":["C:/Users/Alexander/Desktop/django-react-boilerplate/root/src/containers/Checkout.js"],"names":["React","CardElement","ElementsConsumer","Elements","loadStripe","Button","Container","Divider","Header","Item","Loader","Message","checkoutURL","orderSummaryURL","authAxios","stripePromise","OrderPreview","Component","state","handleFetchOrder","setState","loading","get","then","res","data","catch","err","response","status","error","componentDidMount","render","CheckoutForm","success","handleSubmit","event","preventDefault","stripe","elements","props","cardElement","getElement","paymentMethod","createPaymentMethod","type","card","post","stripeToken","console","log","JSON","stringify","marginTop","InjectedCheckoutForm"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { CardElement, ElementsConsumer } from \"@stripe/react-stripe-js\";\r\n\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Header,\r\n  Item,\r\n  Loader,\r\n  Message,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { checkoutURL, orderSummaryURL } from \"../containers/constants\";\r\n\r\nimport { authAxios } from \"../Utils\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51Ha0vNGV70HGHFAGYq6tdL9DjEXnL6uslIYoVA7TLvwLhW1EHWUWiMh0KM4PEkxkzCsy6Y0mbkjAdXCBzlPzJVbx00Mtss3kPN\"\r\n);\r\n\r\nclass OrderPreview extends React.Component {\r\n  state = {\r\n    \r\n  }\r\n  \r\n  \r\n  componentDidMount() {\r\n    this.handleFetchOrder();\r\n  }\r\n\r\n  handleFetchOrder = () => {\r\n    this.setState({ loading: true });\r\n    authAxios\r\n      .get(orderSummaryURL)\r\n      .then((res) => {\r\n        this.setState({ data: res.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 404) {\r\n          this.setState({\r\n            error: \"You currently do not have an active order\",\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({ error: err, loading: false });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Item.Group relaxed>\r\n          <Item>\r\n            <Item.Image size=\"tiny\" src=\"/images/wireframe/image.png\" />\r\n\r\n            <Item.Content verticalAlign=\"middle\">\r\n              <Item.Header as=\"a\">12 Years a Slave</Item.Header>\r\n            </Item.Content>\r\n          </Item>\r\n\r\n          <Item>\r\n            <Item.Image size=\"tiny\" src=\"/images/wireframe/image.png\" />\r\n\r\n            <Item.Content verticalAlign=\"middle\">\r\n              <Item.Header as=\"a\">My Neighbor Totoro</Item.Header>\r\n            </Item.Content>\r\n          </Item>\r\n\r\n          <Item>\r\n            <Item.Image size=\"tiny\" src=\"/images/wireframe/image.png\" />\r\n\r\n            <Item.Content verticalAlign=\"middle\">\r\n              <Item.Header as=\"a\">Watchmen</Item.Header>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n\r\n        <Item.Group>\r\n          <Item.Content>\r\n            <Item.Header>Order Total: $xx</Item.Header>\r\n          </Item.Content>\r\n        </Item.Group>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass CheckoutForm extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    error: null,\r\n    success: false,\r\n  };\r\n  handleSubmit = async (event) => {\r\n    // Block native form submission.\r\n    event.preventDefault();\r\n\r\n    const { stripe, elements } = this.props;\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n    authAxios\r\n      .post(checkoutURL, { stripeToken: paymentMethod.card })\r\n      .then((res) => {\r\n        this.setState({ loading: false, success: true });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ loading: false, error: err });\r\n      });\r\n\r\n    if (error) {\r\n      console.log(\"[error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { stripe } = this.props;\r\n    const { error, loading, success } = this.state;\r\n    return (\r\n      <div>\r\n        {error && (\r\n          <Message negative>\r\n            <Message.Header>Your payment was unsuccessful</Message.Header>\r\n            <p>{JSON.stringify(error)}</p>\r\n          </Message>\r\n        )}\r\n        {success && (\r\n          <Message positive>\r\n            <Message.Header>Your payment was successful</Message.Header>\r\n            <p>\r\n              Go to you profile <b>profile</b> to see the order delivery status.\r\n            </p>\r\n          </Message>\r\n        )}\r\n        <OrderPreview />\r\n        <Divider />\r\n        <Header>Would you like to complete the purshase ?</Header>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <CardElement />\r\n\r\n          <Button\r\n            primary\r\n            type=\"submit\"\r\n            disabled={!stripe}\r\n            style={{ marginTop: \"10px\" }}\r\n            // loading={loading}\r\n            // disabled={loading}\r\n          >\r\n            Pay\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst InjectedCheckoutForm = () => {\r\n  return (\r\n    <Container text>\r\n      <h3>Complete your Order</h3>\r\n      <Elements stripe={stripePromise}>\r\n        <ElementsConsumer>\r\n          {({ elements, stripe }) => (\r\n            <CheckoutForm elements={elements} stripe={stripe} />\r\n          )}\r\n        </ElementsConsumer>\r\n      </Elements>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InjectedCheckoutForm;\r\n"]},"metadata":{},"sourceType":"module"}