{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommerceproject\\\\root\\\\src\\\\containers\\\\Profile.js\";\nimport React, { Component } from \"react\";\nimport { authAxios } from \"../Utils\";\nimport { Button, Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select } from \"semantic-ui-react\";\nimport { addressListURL, addressCreateURL, addressUpdateURL, countryListURL, userIDURL } from \"./constants\";\nconst UPDATE_FORM = \"UPDATE_FORM\";\nconst CREATE_FORM = \"CREATE_FORM\";\n\nclass AddressForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formData: {\n        address_type: \"\",\n        apartment_address: \"\",\n        country: \"\",\n        default: false,\n        id: \"\",\n        street_address: \"\",\n        user: 1,\n        zip: \"\"\n      },\n      error: null,\n      loading: false,\n      saving: false,\n      success: false\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        saving: true\n      });\n      e.preventDefault();\n      const {\n        formType\n      } = this.props;\n\n      if (formType === UPDATE_FORM) {\n        this.handleUpdateAddress();\n      } else {\n        this.handleCreateAddress();\n      }\n    };\n\n    this.handleCreateAddress = e => {\n      const {\n        formData\n      } = this.state;\n      const {\n        activeItem,\n        userID\n      } = this.props;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          loading: false,\n          success: true\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleUpdateAddress = () => {\n      const {\n        userID,\n        activeItem\n      } = this.props;\n      const {\n        formData\n      } = this.state;\n      authAxios.put(addressUpdateURL(formData.id), { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          saving: false,\n          success: true,\n          formData: {\n            default: false\n          }\n        });\n        this.props.callback();\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      address,\n      formType\n    } = this.props;\n\n    if (formType === UPDATE_FORM) {\n      this.setState({\n        formData: address\n      });\n    }\n  }\n\n  render() {\n    const {\n      countries\n    } = this.props;\n    const {\n      error,\n      formData,\n      success,\n      saving\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      success: success,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"street_address\",\n      placeholder: \"Street address\",\n      onChange: this.handleChange,\n      value: formData.street_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"apartment_address\",\n      placeholder: \"Apartment address\",\n      onChange: this.handleChange,\n      value: formData.apartment_address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      loading: countries.length < 1,\n      fluid: true,\n      clearable: true,\n      search: true,\n      options: countries,\n      name: \"country\",\n      placeholder: \"Country\",\n      onChange: this.handleSelectChange,\n      value: formData.country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"zip\",\n      placeholder: \"Zip code\",\n      onChange: this.handleChange,\n      value: formData.zip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address?\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Success!\",\n      content: \"Your address was saved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      disabled: saving,\n      loading: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, \"Save\"));\n  }\n\n}\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"billingAddress\",\n      addresses: [],\n      countries: [],\n      userID: null,\n      selectedAddress: null\n    };\n\n    this.handleItemClick = name => {\n      this.setState({\n        activeItem: name\n      }, () => {\n        this.handleFetchAddresses();\n      });\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleSelectAddress = address => {\n      this.setState({\n        selectedAddress: address\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      addresses,\n      countries,\n      error,\n      selectedAddress,\n      loading,\n      userID\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      divides: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 19\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Menu, {\n      pointing: true,\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Billing Address\",\n      active: activeItem === \"billingAddress\",\n      onClick: () => this.handleItemClick(\"billingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Shipping Address\",\n      active: activeItem === \"shippingAddress\",\n      onClick: () => this.handleItemClick(\"shippingAddress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Payment History\",\n      active: activeItem === \"paymentHistory\",\n      onClick: () => this.handleItemClick(\"paymentHistory\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, `Update your ${activeItem === \"billingAddress\" ? \"Billing\" : \"Shipping\"} address`), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }\n    }, addresses.map(a => {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: a.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }\n      }, a.default && /*#__PURE__*/React.createElement(Label, {\n        as: \"a\",\n        color: \"blue\",\n        ribbon: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 23\n        }\n      }, a.street_address, \", \", a.apartment_address), /*#__PURE__*/React.createElement(Card.Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 23\n        }\n      }, a.country), /*#__PURE__*/React.createElement(Card.Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 23\n        }\n      }, a.zip)), /*#__PURE__*/React.createElement(Card.Content, {\n        extra: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"yellow\",\n        onClick: () => this.handleSelectAddress(a),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 23\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 23\n        }\n      }, \"Delete\")));\n    })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 37\n      }\n    }) : null, /*#__PURE__*/React.createElement(AddressForm, {\n      activeItem: activeItem,\n      countries: countries,\n      formType: CREATE_FORM,\n      userID: userID,\n      callback: this.handleCallBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    }), selectedAddress && /*#__PURE__*/React.createElement(AddressForm, {\n      activeItem: activeItem,\n      countries: countries,\n      address: selectedAddress,\n      formType: UPDATE_FORM,\n      userID: userID,\n      callback: this.handleCallBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Alexander/Desktop/important/ecommerceproject/root/src/containers/Profile.js"],"names":["React","Component","authAxios","Button","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","addressListURL","addressCreateURL","addressUpdateURL","countryListURL","userIDURL","UPDATE_FORM","CREATE_FORM","AddressForm","state","formData","address_type","apartment_address","country","default","id","street_address","user","zip","error","loading","saving","success","handleToggleDefault","updatedFormdata","setState","handleChange","e","target","name","value","handleSelectChange","handleSubmit","preventDefault","formType","props","handleUpdateAddress","handleCreateAddress","activeItem","userID","post","then","res","catch","err","put","callback","componentDidMount","address","render","countries","length","Profile","addresses","selectedAddress","handleItemClick","handleFetchAddresses","handleFormatCountries","keys","Object","map","k","key","text","handleSelectAddress","handleFetchUserID","get","data","handleFetchCountries","JSON","stringify","a","handleCallBack"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { authAxios } from \"../Utils\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  Dimmer,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Label,\r\n  Loader,\r\n  Menu,\r\n  Message,\r\n  Segment,\r\n  Select,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {\r\n  addressListURL,\r\n  addressCreateURL,\r\n  addressUpdateURL,\r\n  countryListURL,\r\n  userIDURL,\r\n} from \"./constants\";\r\n\r\nconst UPDATE_FORM = \"UPDATE_FORM\";\r\nconst CREATE_FORM = \"CREATE_FORM\";\r\n\r\nclass AddressForm extends React.Component {\r\n  state = {\r\n    formData: {\r\n      address_type: \"\",\r\n      apartment_address: \"\",\r\n      country: \"\",\r\n      default: false,\r\n      id: \"\",\r\n      street_address: \"\",\r\n      user: 1,\r\n      zip: \"\",\r\n    },\r\n    error: null,\r\n    loading: false,\r\n    saving: false,\r\n    success: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { address, formType } = this.props;\r\n    if (formType === UPDATE_FORM) {\r\n      this.setState({ formData: address });\r\n    }\r\n  }\r\n\r\n  handleToggleDefault = () => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      default: !formData.default,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleSelectChange = (e, { name, value }) => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      [name]: value,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    this.setState({ saving: true });\r\n    e.preventDefault();\r\n    const { formType } = this.props;\r\n    if (formType === UPDATE_FORM) {\r\n      this.handleUpdateAddress();\r\n    } else {\r\n      this.handleCreateAddress();\r\n    }\r\n  };\r\n\r\n  handleCreateAddress = (e) => {\r\n    const { formData } = this.state;\r\n    const { activeItem, userID } = this.props;\r\n    authAxios\r\n      .post(addressCreateURL, {\r\n        ...formData,\r\n        user: userID,\r\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\r\n      })\r\n      .then((res) => {\r\n        this.setState({ loading: false, success: true });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n  handleUpdateAddress = () => {\r\n    const { userID, activeItem } = this.props;\r\n    const { formData } = this.state;\r\n    authAxios\r\n      .put(addressUpdateURL(formData.id), {\r\n        ...formData,\r\n        user: userID,\r\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          saving: false,\r\n          success: true,\r\n          formData: { default: false },\r\n        });\r\n        this.props.callback();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n  render() {\r\n    const { countries } = this.props;\r\n    const { error, formData, success, saving } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} success={success} error={error}>\r\n        <Form.Input\r\n          required\r\n          name=\"street_address\"\r\n          placeholder=\"Street address\"\r\n          onChange={this.handleChange}\r\n          value={formData.street_address}\r\n        />\r\n        <Form.Input\r\n          required\r\n          name=\"apartment_address\"\r\n          placeholder=\"Apartment address\"\r\n          onChange={this.handleChange}\r\n          value={formData.apartment_address}\r\n        />\r\n        <Form.Field required>\r\n          <Select\r\n            loading={countries.length < 1}\r\n            fluid\r\n            clearable\r\n            search\r\n            options={countries}\r\n            name=\"country\"\r\n            placeholder=\"Country\"\r\n            onChange={this.handleSelectChange}\r\n            value={formData.country}\r\n          />\r\n        </Form.Field>\r\n        <Form.Input\r\n          required\r\n          name=\"zip\"\r\n          placeholder=\"Zip code\"\r\n          onChange={this.handleChange}\r\n          value={formData.zip}\r\n        />\r\n        <Form.Checkbox\r\n          name=\"default\"\r\n          label=\"Make this the default address?\"\r\n          onChange={this.handleToggleDefault}\r\n          checked={formData.default}\r\n        />\r\n        {success && (\r\n          <Message success header=\"Success!\" content=\"Your address was saved\" />\r\n        )}\r\n        {/* {error && (\r\n          <Message\r\n            error\r\n            header=\"There was an error\"\r\n            content={JSON.stringify(error)}\r\n          />\r\n        )} */}\r\n        <Form.Button disabled={saving} loading={saving} primary>\r\n          Save\r\n        </Form.Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    activeItem: \"billingAddress\",\r\n    addresses: [],\r\n    countries: [],\r\n    userID: null,\r\n    selectedAddress: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleFetchAddresses();\r\n    this.handleFetchCountries();\r\n    this.handleFetchUserID();\r\n  }\r\n\r\n  handleItemClick = (name) => {\r\n    this.setState({ activeItem: name }, () => {\r\n      this.handleFetchAddresses();\r\n    });\r\n  };\r\n\r\n  handleFormatCountries = (countries) => {\r\n    const keys = Object.keys(countries);\r\n    return keys.map((k) => {\r\n      return { key: k, text: countries[k], value: k };\r\n    });\r\n  };\r\n\r\n  handleSelectAddress = (address) => {\r\n    this.setState({ selectedAddress: address });\r\n  };\r\n\r\n  handleFetchUserID = () => {\r\n    this.setState({ loading: true });\r\n    authAxios\r\n      .get(userIDURL)\r\n      .then((res) => {\r\n        this.setState({ userID: res.data.userID });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleFetchCountries = () => {\r\n    this.setState({ loading: true });\r\n    authAxios\r\n      .get(countryListURL)\r\n      .then((res) => {\r\n        this.setState({ countries: this.handleFormatCountries(res.data) });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleFetchAddresses = () => {\r\n    this.setState({ loading: true });\r\n    const { activeItem } = this.state;\r\n    authAxios\r\n      .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\r\n      .then((res) => {\r\n        this.setState({ addresses: res.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      activeItem,\r\n      addresses,\r\n      countries,\r\n      error,\r\n      selectedAddress,\r\n      loading,\r\n      userID,\r\n    } = this.state;\r\n    return (\r\n      <Grid container columns={2} divides>\r\n        <Grid.Row>\r\n          <Grid.Column columns={1}>\r\n            {error && (\r\n              <Message\r\n                error\r\n                header=\"There was an error\"\r\n                content={JSON.stringify(error)}\r\n              />\r\n            )}\r\n            {loading && (\r\n              <Segment>\r\n                <Dimmer active inverted>\r\n                  <Loader inverted>Loading</Loader>\r\n                </Dimmer>\r\n\r\n                <Image src=\"/images/wireframe/short-paragraph.png\" />\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column width={6}>\r\n            {\" \"}\r\n            <Menu pointing vertical>\r\n              <Menu.Item\r\n                name=\"Billing Address\"\r\n                active={activeItem === \"billingAddress\"}\r\n                onClick={() => this.handleItemClick(\"billingAddress\")}\r\n              />\r\n              <Menu.Item\r\n                name=\"Shipping Address\"\r\n                active={activeItem === \"shippingAddress\"}\r\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\r\n              />\r\n              <Menu.Item\r\n                name=\"Payment History\"\r\n                active={activeItem === \"paymentHistory\"}\r\n                onClick={() => this.handleItemClick(\"paymentHistory\")}\r\n              />\r\n            </Menu>\r\n          </Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Header>{`Update your ${\r\n              activeItem === \"billingAddress\" ? \"Billing\" : \"Shipping\"\r\n            } address`}</Header>\r\n            <Divider />\r\n            <Card.Group>\r\n              {addresses.map((a) => {\r\n                return (\r\n                  <Card key={a.id}>\r\n                    <Card.Content>\r\n                      {a.default && (\r\n                        <Label as=\"a\" color=\"blue\" ribbon=\"right\">\r\n                          Default\r\n                        </Label>\r\n                      )}\r\n                      <Card.Header>\r\n                        {a.street_address}, {a.apartment_address}\r\n                      </Card.Header>\r\n                      <Card.Meta>{a.country}</Card.Meta>\r\n                      <Card.Description>{a.zip}</Card.Description>\r\n                    </Card.Content>\r\n                    <Card.Content extra>\r\n                      <Button\r\n                        color=\"yellow\"\r\n                        onClick={() => this.handleSelectAddress(a)}\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                      <Button color=\"red\">Delete</Button>\r\n                    </Card.Content>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </Card.Group>\r\n            {addresses.length > 0 ? <Divider /> : null}\r\n            <AddressForm\r\n              activeItem={activeItem}\r\n              countries={countries}\r\n              formType={CREATE_FORM}\r\n              userID={userID}\r\n              callback={this.handleCallBack}\r\n            />\r\n            {selectedAddress && (\r\n              <AddressForm\r\n                activeItem={activeItem}\r\n                countries={countries}\r\n                address={selectedAddress}\r\n                formType={UPDATE_FORM}\r\n                userID={userID}\r\n                callback={this.handleCallBack}\r\n              />\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}