{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommercedr\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommercedr\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommercedr\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommercedr\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{connect}from\"react-redux\";import{Redirect}from\"react-router-dom\";import{Button,Card,Dimmer,Divider,Grid,Header,Image,Label,Loader,Menu,Message,Segment}from\"semantic-ui-react\";import{countryListURL,addressDeleteURL,userIDURL}from\"./constants\";import{authAxios}from\"../Utils\";import{fetchAddresses as _fetchAddresses}from\"../store/actions/Address\";import PaymentHistory from\"./PaymentHistory\";import AddressForm from\"./AddressForm\";var UPDATE_FORM=\"UPDATE_FORM\";var CREATE_FORM=\"CREATE_FORM\";var globalActiveItem=\"billingAddress\";var Profile=/*#__PURE__*/function(_React$Component){_inherits(Profile,_React$Component);var _super=_createSuper(Profile);function Profile(){var _this;_classCallCheck(this,Profile);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={activeItem:\"billingAddress\",addresses:[],countries:[],userID:null,selectedAddress:null};_this.handleItemClick=function(name){_this.setState({activeItem:name},function(){globalActiveItem=_this.state.activeItem;_this.props.fetchAddresses();});};_this.handleGetActiveItem=function(){var activeItem=_this.state.activeItem;if(activeItem===\"billingAddress\"){return\"Billing Address\";}else if(activeItem===\"shippingAddress\"){return\"Shipping Address\";}return\"Payment History\";};_this.handleFormatCountries=function(countries){var keys=Object.keys(countries);return keys.map(function(k){return{key:k,text:countries[k],value:k};});};_this.handleDeleteAddress=function(addressID){authAxios.delete(addressDeleteURL(addressID)).then(function(res){_this.handleCallback();}).catch(function(err){_this.setState({error:err});});};_this.handleSelectAddress=function(address){_this.setState({selectedAddress:address});};_this.handleFetchUserID=function(){authAxios.get(userIDURL).then(function(res){_this.setState({userID:res.data.userID});}).catch(function(err){_this.setState({error:err});});};_this.handleFetchCountries=function(){authAxios.get(countryListURL).then(function(res){_this.setState({countries:_this.handleFormatCountries(res.data)});}).catch(function(err){_this.setState({error:err});});};_this.handleCallback=function(){_this.props.fetchAddresses();_this.setState({selectedAddress:null});};_this.renderAddresses=function(){var _this$state=_this.state,activeItem=_this$state.activeItem,addresses=_this$state.addresses,countries=_this$state.countries,selectedAddress=_this$state.selectedAddress,userID=_this$state.userID;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Group,null,_this.props.addressesList.map(function(a){return/*#__PURE__*/React.createElement(Card,{key:a.id},/*#__PURE__*/React.createElement(Card.Content,null,a.default&&/*#__PURE__*/React.createElement(Label,{as:\"a\",color:\"blue\",ribbon:\"right\"},\"Default\"),/*#__PURE__*/React.createElement(Card.Header,null,a.street_address,\", \",a.apartment_address),/*#__PURE__*/React.createElement(Card.Meta,null,a.country),/*#__PURE__*/React.createElement(Card.Description,null,a.zip)),/*#__PURE__*/React.createElement(Card.Content,{extra:true},/*#__PURE__*/React.createElement(Button,{color:\"yellow\",onClick:function onClick(){return _this.handleSelectAddress(a);}},\"Update\"),/*#__PURE__*/React.createElement(Button,{color:\"red\",onClick:function onClick(){return _this.handleDeleteAddress(a.id);}},\"Delete\")));})),addresses.length>0?/*#__PURE__*/React.createElement(Divider,null):null,selectedAddress===null?/*#__PURE__*/React.createElement(AddressForm,{activeItem:activeItem,countries:countries,formType:CREATE_FORM,userID:userID,callback:_this.handleCallback}):null,selectedAddress&&/*#__PURE__*/React.createElement(AddressForm,{activeItem:activeItem,userID:userID,countries:countries,address:selectedAddress,formType:UPDATE_FORM,callback:_this.handleCallback}));};return _this;}_createClass(Profile,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchAddresses();this.handleFetchCountries();this.handleFetchUserID();}},{key:\"render\",value:function render(){var _this2=this;var _this$state2=this.state,activeItem=_this$state2.activeItem,error=_this$state2.error,loading=_this$state2.loading;var isAuthenticated=this.props.isAuthenticated;// console.log(error);\nif(!isAuthenticated){return/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"});}return/*#__PURE__*/React.createElement(Grid,{container:true,columns:2,divided:true},/*#__PURE__*/React.createElement(Grid.Row,{columns:1},/*#__PURE__*/React.createElement(Grid.Column,null,error&&/*#__PURE__*/React.createElement(Message,{error:true,header:\"There was an error\",content:JSON.stringify(error)}),loading&&/*#__PURE__*/React.createElement(Segment,null,/*#__PURE__*/React.createElement(Dimmer,{active:true,inverted:true},/*#__PURE__*/React.createElement(Loader,{inverted:true},\"Loading\")),/*#__PURE__*/React.createElement(Image,{src:\"/images/wireframe/short-paragraph.png\"})))),/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(Grid.Column,{width:6},/*#__PURE__*/React.createElement(Menu,{pointing:true,vertical:true,fluid:true},/*#__PURE__*/React.createElement(Menu.Item,{name:\"Billing Address\",active:activeItem===\"billingAddress\",onClick:function onClick(){return _this2.handleItemClick(\"billingAddress\");}}),/*#__PURE__*/React.createElement(Menu.Item,{name:\"Shipping Address\",active:activeItem===\"shippingAddress\",onClick:function onClick(){return _this2.handleItemClick(\"shippingAddress\");}}),/*#__PURE__*/React.createElement(Menu.Item,{name:\"Payment history\",active:activeItem===\"paymentHistory\",onClick:function onClick(){return _this2.handleItemClick(\"paymentHistory\");}}))),/*#__PURE__*/React.createElement(Grid.Column,{width:10},/*#__PURE__*/React.createElement(Header,null,this.handleGetActiveItem()),/*#__PURE__*/React.createElement(Divider,null),activeItem===\"paymentHistory\"?/*#__PURE__*/React.createElement(PaymentHistory,null):this.renderAddresses())));}}]);return Profile;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.token!==null,addressesList:state.address.addressList};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchAddresses:function fetchAddresses(){return dispatch(_fetchAddresses(globalActiveItem===\"billingAddress\"?\"B\":\"S\"));}};};export default connect(mapStateToProps,mapDispatchToProps)(Profile);","map":{"version":3,"sources":["C:/Users/Alexander/Desktop/important/ecommercedr/frontend/src/containers/Profile.js"],"names":["React","connect","Redirect","Button","Card","Dimmer","Divider","Grid","Header","Image","Label","Loader","Menu","Message","Segment","countryListURL","addressDeleteURL","userIDURL","authAxios","fetchAddresses","PaymentHistory","AddressForm","UPDATE_FORM","CREATE_FORM","globalActiveItem","Profile","state","activeItem","addresses","countries","userID","selectedAddress","handleItemClick","name","setState","props","handleGetActiveItem","handleFormatCountries","keys","Object","map","k","key","text","value","handleDeleteAddress","addressID","delete","then","res","handleCallback","catch","err","error","handleSelectAddress","address","handleFetchUserID","get","data","handleFetchCountries","renderAddresses","addressesList","a","id","default","street_address","apartment_address","country","zip","length","loading","isAuthenticated","JSON","stringify","Component","mapStateToProps","auth","token","addressList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Dimmer,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Label,\r\n  Loader,\r\n  Menu,\r\n  Message,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { countryListURL, addressDeleteURL, userIDURL } from \"./constants\";\r\nimport { authAxios } from \"../Utils\";\r\nimport { fetchAddresses } from \"../store/actions/Address\";\r\n\r\nimport PaymentHistory from \"./PaymentHistory\";\r\nimport AddressForm from \"./AddressForm\";\r\n\r\nconst UPDATE_FORM = \"UPDATE_FORM\";\r\nconst CREATE_FORM = \"CREATE_FORM\";\r\n\r\nlet globalActiveItem = \"billingAddress\";\r\n\r\nclass Profile extends React.Component {\r\n  state = {\r\n    activeItem: \"billingAddress\",\r\n    addresses: [],\r\n    countries: [],\r\n    userID: null,\r\n    selectedAddress: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchAddresses();\r\n    this.handleFetchCountries();\r\n    this.handleFetchUserID();\r\n  }\r\n\r\n  handleItemClick = (name) => {\r\n    this.setState({ activeItem: name }, () => {\r\n      globalActiveItem = this.state.activeItem;\r\n      this.props.fetchAddresses();\r\n    });\r\n  };\r\n\r\n  handleGetActiveItem = () => {\r\n    const { activeItem } = this.state;\r\n    if (activeItem === \"billingAddress\") {\r\n      return \"Billing Address\";\r\n    } else if (activeItem === \"shippingAddress\") {\r\n      return \"Shipping Address\";\r\n    }\r\n    return \"Payment History\";\r\n  };\r\n\r\n  handleFormatCountries = (countries) => {\r\n    const keys = Object.keys(countries);\r\n    return keys.map((k) => {\r\n      return {\r\n        key: k,\r\n        text: countries[k],\r\n        value: k,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleDeleteAddress = (addressID) => {\r\n    authAxios\r\n      .delete(addressDeleteURL(addressID))\r\n      .then((res) => {\r\n        this.handleCallback();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleSelectAddress = (address) => {\r\n    this.setState({ selectedAddress: address });\r\n  };\r\n\r\n  handleFetchUserID = () => {\r\n    authAxios\r\n      .get(userIDURL)\r\n      .then((res) => {\r\n        this.setState({ userID: res.data.userID });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleFetchCountries = () => {\r\n    authAxios\r\n      .get(countryListURL)\r\n      .then((res) => {\r\n        this.setState({ countries: this.handleFormatCountries(res.data) });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleCallback = () => {\r\n    this.props.fetchAddresses();\r\n    this.setState({ selectedAddress: null });\r\n  };\r\n\r\n  renderAddresses = () => {\r\n    const {\r\n      activeItem,\r\n      addresses,\r\n      countries,\r\n      selectedAddress,\r\n      userID,\r\n    } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Card.Group>\r\n          {this.props.addressesList.map((a) => {\r\n            return (\r\n              <Card key={a.id}>\r\n                <Card.Content>\r\n                  {a.default && (\r\n                    <Label as=\"a\" color=\"blue\" ribbon=\"right\">\r\n                      Default\r\n                    </Label>\r\n                  )}\r\n                  <Card.Header>\r\n                    {a.street_address}, {a.apartment_address}\r\n                  </Card.Header>\r\n                  <Card.Meta>{a.country}</Card.Meta>\r\n                  <Card.Description>{a.zip}</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                  <Button\r\n                    color=\"yellow\"\r\n                    onClick={() => this.handleSelectAddress(a)}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                  <Button\r\n                    color=\"red\"\r\n                    onClick={() => this.handleDeleteAddress(a.id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Card.Content>\r\n              </Card>\r\n            );\r\n          })}\r\n        </Card.Group>\r\n        {addresses.length > 0 ? <Divider /> : null}\r\n        {selectedAddress === null ? (\r\n          <AddressForm\r\n            activeItem={activeItem}\r\n            countries={countries}\r\n            formType={CREATE_FORM}\r\n            userID={userID}\r\n            callback={this.handleCallback}\r\n          />\r\n        ) : null}\r\n        {selectedAddress && (\r\n          <AddressForm\r\n            activeItem={activeItem}\r\n            userID={userID}\r\n            countries={countries}\r\n            address={selectedAddress}\r\n            formType={UPDATE_FORM}\r\n            callback={this.handleCallback}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { activeItem, error, loading } = this.state;\r\n    const { isAuthenticated } = this.props;\r\n    // console.log(error);\r\n\r\n    if (!isAuthenticated) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <Grid container columns={2} divided>\r\n        <Grid.Row columns={1}>\r\n          <Grid.Column>\r\n            {error && (\r\n              <Message\r\n                error\r\n                header=\"There was an error\"\r\n                content={JSON.stringify(error)}\r\n              />\r\n            )}\r\n            {loading && (\r\n              <Segment>\r\n                <Dimmer active inverted>\r\n                  <Loader inverted>Loading</Loader>\r\n                </Dimmer>\r\n                <Image src=\"/images/wireframe/short-paragraph.png\" />\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column width={6}>\r\n            <Menu pointing vertical fluid>\r\n              <Menu.Item\r\n                name=\"Billing Address\"\r\n                active={activeItem === \"billingAddress\"}\r\n                onClick={() => this.handleItemClick(\"billingAddress\")}\r\n              />\r\n              <Menu.Item\r\n                name=\"Shipping Address\"\r\n                active={activeItem === \"shippingAddress\"}\r\n                onClick={() => this.handleItemClick(\"shippingAddress\")}\r\n              />\r\n              <Menu.Item\r\n                name=\"Payment history\"\r\n                active={activeItem === \"paymentHistory\"}\r\n                onClick={() => this.handleItemClick(\"paymentHistory\")}\r\n              />\r\n            </Menu>\r\n          </Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Header>{this.handleGetActiveItem()}</Header>\r\n            <Divider />\r\n            {activeItem === \"paymentHistory\" ? (\r\n              <PaymentHistory />\r\n            ) : (\r\n              this.renderAddresses()\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null,\r\n    addressesList: state.address.addressList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchAddresses: () =>\r\n      dispatch(\r\n        fetchAddresses(globalActiveItem === \"billingAddress\" ? \"B\" : \"S\")\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n"]},"metadata":{},"sourceType":"module"}