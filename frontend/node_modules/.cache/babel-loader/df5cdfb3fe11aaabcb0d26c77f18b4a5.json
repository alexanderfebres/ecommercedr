{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Desktop\\\\important\\\\ecommerceproject\\\\root\\\\src\\\\containers\\\\Profile.js\";\nimport React, { Component } from \"react\";\nimport { authAxios } from \"../Utils\";\nimport { Card, Dimmer, Divider, Form, Grid, Header, Image, Label, Loader, Menu, Message, Segment, Select } from \"semantic-ui-react\";\nimport { addressListURL, addressCreateURL, countryListURL, userIDURL } from \"./constants\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeItem: \"billingAddress\",\n      addresses: [],\n      formData: [{\n        default: false\n      }],\n      countries: [],\n      error: null,\n      loading: false,\n      saving: false,\n      success: false,\n      userID: null\n    };\n\n    this.handleItemClick = (e, {\n      name\n    }) => {\n      this.setState({\n        activeItem: name\n      });\n      this.handleFetchAddresses();\n      console.log(\"active\", this.state);\n    };\n\n    this.handleFormatCountries = countries => {\n      const keys = Object.keys(countries);\n      return keys.map(k => {\n        return {\n          key: k,\n          text: countries[k],\n          value: k\n        };\n      });\n    };\n\n    this.handleFetchUserID = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(userIDURL).then(res => {\n        this.setState({\n          userID: res.data.userID\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchCountries = () => {\n      this.setState({\n        loading: true\n      });\n      authAxios.get(countryListURL).then(res => {\n        this.setState({\n          countries: this.handleFormatCountries(res.data)\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleFetchAddresses = () => {\n      this.setState({\n        loading: true\n      });\n      const {\n        activeItem\n      } = this.state;\n      authAxios.get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\")).then(res => {\n        this.setState({\n          addresses: res.data,\n          loading: false\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n\n    this.handleToggleDefault = () => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        default: !formData.default\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [e.target.name]: e.target.value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleSelectChange = (e, {\n      name,\n      value\n    }) => {\n      const {\n        formData\n      } = this.state;\n      const updatedFormdata = { ...formData,\n        [name]: value\n      };\n      this.setState({\n        formData: updatedFormdata\n      });\n    };\n\n    this.handleCreateAddress = e => {\n      const {\n        activeItem,\n        formData,\n        userID\n      } = this.state;\n      authAxios.post(addressCreateURL, { ...formData,\n        user: userID,\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\"\n      }).then(res => {\n        this.setState({\n          loading: false,\n          success: true\n        });\n      }).catch(err => {\n        this.setState({\n          error: err\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAddresses();\n    this.handleFetchCountries();\n    this.handleFetchUserID();\n  }\n\n  render() {\n    const {\n      activeItem,\n      addresses,\n      countries,\n      error,\n      formData,\n      saving,\n      success,\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      columns: 2,\n      divides: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      columns: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, error && /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: \"There was an error\",\n      content: JSON.stringify(error),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }), loading && /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dimmer, {\n      active: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"Loading\")), /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/wireframe/short-paragraph.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Menu, {\n      pointing: true,\n      vertical: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Billing Address\",\n      active: activeItem === \"billingAddress\",\n      onClick: this.handleItemClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Menu.Item, {\n      name: \"Physical Address\",\n      active: activeItem === \"physicalAddress\",\n      onClick: this.handleItemClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, `Update your ${activeItem === \"Billing Address\" ? \"Billing\" : \"Shipping\"} address`), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, addresses.map(a => {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: a.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, a.default && /*#__PURE__*/React.createElement(Label, {\n        as: \"a\",\n        color: \"blue\",\n        ribbon: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, \"Default\"), /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 23\n        }\n      }, a.street_address, \", \", a.apartment_address), /*#__PURE__*/React.createElement(Card.Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 23\n        }\n      }, a.country), /*#__PURE__*/React.createElement(Card.Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 23\n        }\n      }, a.zip)));\n    })), addresses.length > 0 ? /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }) : null, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleCreateAddress,\n      success: success,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"street_address\",\n      placeholder: \"Street Address\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"apartment_address\",\n      placeholder: \"Apartment Address\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Field, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      fluid: true,\n      loading: countries.length < 1,\n      options: countries,\n      search: true,\n      clearble: true,\n      name: \"country\",\n      placeholder: \"Country\",\n      onChange: this.handleSelectChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Input, {\n      required: true,\n      name: \"zip\",\n      placeholder: \"zip\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Checkbox, {\n      name: \"default\",\n      label: \"Make this the default address?\",\n      onChange: this.handleToggleDefault,\n      checked: formData.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }), success && /*#__PURE__*/React.createElement(Message, {\n      success: true,\n      header: \"Form completed\",\n      content: \"Your address was saved \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Button, {\n      loading: saving,\n      disabled: saving,\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, \"Save\")))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["C:/Users/Alexander/Desktop/important/ecommerceproject/root/src/containers/Profile.js"],"names":["React","Component","authAxios","Card","Dimmer","Divider","Form","Grid","Header","Image","Label","Loader","Menu","Message","Segment","Select","addressListURL","addressCreateURL","countryListURL","userIDURL","Profile","state","activeItem","addresses","formData","default","countries","error","loading","saving","success","userID","handleItemClick","e","name","setState","handleFetchAddresses","console","log","handleFormatCountries","keys","Object","map","k","key","text","value","handleFetchUserID","get","then","res","data","catch","err","handleFetchCountries","handleToggleDefault","updatedFormdata","handleChange","target","handleSelectChange","handleCreateAddress","post","user","address_type","componentDidMount","render","JSON","stringify","a","id","street_address","apartment_address","country","zip","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAT,QAA0B,UAA1B;AAEA,SACEC,IADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,MANF,EAOEC,KAPF,EAQEC,KARF,EASEC,MATF,EAUEC,IAVF,EAWEC,OAXF,EAYEC,OAZF,EAaEC,MAbF,QAcO,mBAdP;AAgBA,SACEC,cADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,SAJF,QAKO,aALP;;AAOA,MAAMC,OAAN,SAAsBnB,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BoB,KAD8B,GACtB;AACNC,MAAAA,UAAU,EAAE,gBADN;AAENC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,QAAQ,EAAE,CAAC;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAD,CAHJ;AAINC,MAAAA,SAAS,EAAE,EAJL;AAKNC,MAAAA,KAAK,EAAE,IALD;AAMNC,MAAAA,OAAO,EAAE,KANH;AAONC,MAAAA,MAAM,EAAE,KAPF;AAQNC,MAAAA,OAAO,EAAE,KARH;AASNC,MAAAA,MAAM,EAAE;AATF,KADsB;;AAAA,SAmB9BC,eAnB8B,GAmBZ,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAiB;AACjC,WAAKC,QAAL,CAAc;AAAEb,QAAAA,UAAU,EAAEY;AAAd,OAAd;AACA,WAAKE,oBAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKjB,KAA3B;AACD,KAvB6B;;AAAA,SAyB9BkB,qBAzB8B,GAyBLb,SAAD,IAAe;AACrC,YAAMc,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYd,SAAZ,CAAb;AACA,aAAOc,IAAI,CAACE,GAAL,CAAUC,CAAD,IAAO;AACrB,eAAO;AAAEC,UAAAA,GAAG,EAAED,CAAP;AAAUE,UAAAA,IAAI,EAAEnB,SAAS,CAACiB,CAAD,CAAzB;AAA8BG,UAAAA,KAAK,EAAEH;AAArC,SAAP;AACD,OAFM,CAAP;AAGD,KA9B6B;;AAAA,SAgC9BI,iBAhC8B,GAgCV,MAAM;AACxB,WAAKZ,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA1B,MAAAA,SAAS,CACN8C,GADH,CACO7B,SADP,EAEG8B,IAFH,CAESC,GAAD,IAAS;AACb,aAAKf,QAAL,CAAc;AAAEJ,UAAAA,MAAM,EAAEmB,GAAG,CAACC,IAAJ,CAASpB;AAAnB,SAAd;AACD,OAJH,EAKGqB,KALH,CAKUC,GAAD,IAAS;AACd,aAAKlB,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAE0B;AAAT,SAAd;AACD,OAPH;AAQD,KA1C6B;;AAAA,SA4C9BC,oBA5C8B,GA4CP,MAAM;AAC3B,WAAKnB,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA1B,MAAAA,SAAS,CACN8C,GADH,CACO9B,cADP,EAEG+B,IAFH,CAESC,GAAD,IAAS;AACb,aAAKf,QAAL,CAAc;AAAET,UAAAA,SAAS,EAAE,KAAKa,qBAAL,CAA2BW,GAAG,CAACC,IAA/B;AAAb,SAAd;AACD,OAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACd,aAAKlB,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAE0B;AAAT,SAAd;AACD,OAPH;AAQD,KAtD6B;;AAAA,SAwD9BjB,oBAxD8B,GAwDP,MAAM;AAC3B,WAAKD,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAM;AAAEN,QAAAA;AAAF,UAAiB,KAAKD,KAA5B;AACAnB,MAAAA,SAAS,CACN8C,GADH,CACOhC,cAAc,CAACM,UAAU,KAAK,gBAAf,GAAkC,GAAlC,GAAwC,GAAzC,CADrB,EAEG2B,IAFH,CAESC,GAAD,IAAS;AACb,aAAKf,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAE2B,GAAG,CAACC,IAAjB;AAAuBvB,UAAAA,OAAO,EAAE;AAAhC,SAAd;AACD,OAJH,EAKGwB,KALH,CAKUC,GAAD,IAAS;AACd,aAAKlB,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAE0B;AAAT,SAAd;AACD,OAPH;AAQD,KAnE6B;;AAAA,SAoE9BE,mBApE8B,GAoER,MAAM;AAC1B,YAAM;AAAE/B,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMmC,eAAe,GAAG,EACtB,GAAGhC,QADmB;AAEtBC,QAAAA,OAAO,EAAE,CAACD,QAAQ,CAACC;AAFG,OAAxB;AAIA,WAAKU,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAEgC;AADE,OAAd;AAGD,KA7E6B;;AAAA,SA+E9BC,YA/E8B,GA+EdxB,CAAD,IAAO;AACpB,YAAM;AAAET,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMmC,eAAe,GAAG,EACtB,GAAGhC,QADmB;AAEtB,SAACS,CAAC,CAACyB,MAAF,CAASxB,IAAV,GAAiBD,CAAC,CAACyB,MAAF,CAASZ;AAFJ,OAAxB;AAIA,WAAKX,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAEgC;AADE,OAAd;AAGD,KAxF6B;;AAAA,SA0F9BG,kBA1F8B,GA0FT,CAAC1B,CAAD,EAAI;AAAEC,MAAAA,IAAF;AAAQY,MAAAA;AAAR,KAAJ,KAAwB;AAC3C,YAAM;AAAEtB,QAAAA;AAAF,UAAe,KAAKH,KAA1B;AACA,YAAMmC,eAAe,GAAG,EACtB,GAAGhC,QADmB;AAEtB,SAACU,IAAD,GAAQY;AAFc,OAAxB;AAIA,WAAKX,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAEgC;AADE,OAAd;AAGD,KAnG6B;;AAAA,SAqG9BI,mBArG8B,GAqGP3B,CAAD,IAAO;AAC3B,YAAM;AAAEX,QAAAA,UAAF;AAAcE,QAAAA,QAAd;AAAwBO,QAAAA;AAAxB,UAAmC,KAAKV,KAA9C;AACAnB,MAAAA,SAAS,CACN2D,IADH,CACQ5C,gBADR,EAC0B,EACtB,GAAGO,QADmB;AAEtBsC,QAAAA,IAAI,EAAE/B,MAFgB;AAGtBgC,QAAAA,YAAY,EAAEzC,UAAU,KAAK,gBAAf,GAAkC,GAAlC,GAAwC;AAHhC,OAD1B,EAMG2B,IANH,CAMSC,GAAD,IAAS;AACb,aAAKf,QAAL,CAAc;AAAEP,UAAAA,OAAO,EAAE,KAAX;AAAkBE,UAAAA,OAAO,EAAE;AAA3B,SAAd;AACD,OARH,EASGsB,KATH,CASUC,GAAD,IAAS;AACd,aAAKlB,QAAL,CAAc;AAAER,UAAAA,KAAK,EAAE0B;AAAT,SAAd;AACD,OAXH;AAYD,KAnH6B;AAAA;;AAa9BW,EAAAA,iBAAiB,GAAG;AAClB,SAAK5B,oBAAL;AACA,SAAKkB,oBAAL;AACA,SAAKP,iBAAL;AACD;;AAoGDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJ3C,MAAAA,UADI;AAEJC,MAAAA,SAFI;AAGJG,MAAAA,SAHI;AAIJC,MAAAA,KAJI;AAKJH,MAAAA,QALI;AAMJK,MAAAA,MANI;AAOJC,MAAAA,OAPI;AAQJF,MAAAA;AARI,QASF,KAAKP,KATT;AAUA,wBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,OAAO,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,KAAK,iBACJ,oBAAC,OAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,MAAM,EAAC,oBAFT;AAGE,MAAA,OAAO,EAAEuC,IAAI,CAACC,SAAL,CAAexC,KAAf,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQGC,OAAO,iBACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAKE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,uCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CATJ,CADF,CADF,eAqBE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,eAEE,oBAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,iBADP;AAEE,MAAA,MAAM,EAAEN,UAAU,KAAK,gBAFzB;AAGE,MAAA,OAAO,EAAE,KAAKU,eAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,kBADP;AAEE,MAAA,MAAM,EAAEV,UAAU,KAAK,iBAFzB;AAGE,MAAA,OAAO,EAAE,KAAKU,eAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFF,CADF,eAgBE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAU,eACRV,UAAU,KAAK,iBAAf,GAAmC,SAAnC,GAA+C,UAChD,UAFD,CADF,eAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,SAAS,CAACmB,GAAV,CAAe0B,CAAD,IAAO;AACpB,0BACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,CAAC,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,CAAC,CAAC3C,OAAF,iBACC,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,GAAV;AAAc,QAAA,KAAK,EAAC,MAApB;AAA2B,QAAA,MAAM,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAME,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG2C,CAAC,CAACE,cADL,QACuBF,CAAC,CAACG,iBADzB,CANF,eASE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYH,CAAC,CAACI,OAAd,CATF,eAUE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBJ,CAAC,CAACK,GAArB,CAVF,CADF,CADF;AAgBD,KAjBA,CADH,CALF,EAyBGlD,SAAS,CAACmD,MAAV,GAAmB,CAAnB,gBAAuB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB,GAAqC,IAzBxC,eA2BE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKd,mBAArB;AAA0C,MAAA,OAAO,EAAE9B,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,gBAFP;AAGE,MAAA,WAAW,EAAC,gBAHd;AAIE,MAAA,QAAQ,EAAE,KAAK2B,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,mBAFP;AAGE,MAAA,WAAW,EAAC,mBAHd;AAIE,MAAA,QAAQ,EAAE,KAAKA,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAaE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,QAAQ,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,OAAO,EAAE/B,SAAS,CAACgD,MAAV,GAAmB,CAF9B;AAGE,MAAA,OAAO,EAAEhD,SAHX;AAIE,MAAA,MAAM,MAJR;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,IAAI,EAAC,SANP;AAOE,MAAA,WAAW,EAAC,SAPd;AAQE,MAAA,QAAQ,EAAE,KAAKiC,kBARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAbF,eA0BE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,WAAW,EAAC,KAHd;AAIE,MAAA,QAAQ,EAAE,KAAKF,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,eAgCE,oBAAC,IAAD,CAAM,QAAN;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,KAAK,EAAC,gCAFR;AAGE,MAAA,QAAQ,EAAE,KAAKF,mBAHjB;AAIE,MAAA,OAAO,EAAE/B,QAAQ,CAACC,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,EAsCGK,OAAO,iBACN,oBAAC,OAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,MAAM,EAAC,gBAFT;AAGE,MAAA,OAAO,EAAC,yBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCJ,eA6CE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,EAAED,MAAtB;AAA8B,MAAA,QAAQ,EAAEA,MAAxC;AAAgD,MAAA,OAAO,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CF,CA3BF,CAhBF,CArBF,CADF;AAsHD;;AAtP6B;;AAyPhC,eAAeT,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { authAxios } from \"../Utils\";\r\n\r\nimport {\r\n  Card,\r\n  Dimmer,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Label,\r\n  Loader,\r\n  Menu,\r\n  Message,\r\n  Segment,\r\n  Select,\r\n} from \"semantic-ui-react\";\r\n\r\nimport {\r\n  addressListURL,\r\n  addressCreateURL,\r\n  countryListURL,\r\n  userIDURL,\r\n} from \"./constants\";\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    activeItem: \"billingAddress\",\r\n    addresses: [],\r\n    formData: [{ default: false }],\r\n    countries: [],\r\n    error: null,\r\n    loading: false,\r\n    saving: false,\r\n    success: false,\r\n    userID: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleFetchAddresses();\r\n    this.handleFetchCountries();\r\n    this.handleFetchUserID();\r\n  }\r\n\r\n  handleItemClick = (e, { name }) => {\r\n    this.setState({ activeItem: name });\r\n    this.handleFetchAddresses();\r\n    console.log(\"active\", this.state);\r\n  };\r\n\r\n  handleFormatCountries = (countries) => {\r\n    const keys = Object.keys(countries);\r\n    return keys.map((k) => {\r\n      return { key: k, text: countries[k], value: k };\r\n    });\r\n  };\r\n\r\n  handleFetchUserID = () => {\r\n    this.setState({ loading: true });\r\n    authAxios\r\n      .get(userIDURL)\r\n      .then((res) => {\r\n        this.setState({ userID: res.data.userID });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleFetchCountries = () => {\r\n    this.setState({ loading: true });\r\n    authAxios\r\n      .get(countryListURL)\r\n      .then((res) => {\r\n        this.setState({ countries: this.handleFormatCountries(res.data) });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  handleFetchAddresses = () => {\r\n    this.setState({ loading: true });\r\n    const { activeItem } = this.state;\r\n    authAxios\r\n      .get(addressListURL(activeItem === \"billingAddress\" ? \"B\" : \"S\"))\r\n      .then((res) => {\r\n        this.setState({ addresses: res.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n  handleToggleDefault = () => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      default: !formData.default,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleSelectChange = (e, { name, value }) => {\r\n    const { formData } = this.state;\r\n    const updatedFormdata = {\r\n      ...formData,\r\n      [name]: value,\r\n    };\r\n    this.setState({\r\n      formData: updatedFormdata,\r\n    });\r\n  };\r\n\r\n  handleCreateAddress = (e) => {\r\n    const { activeItem, formData, userID } = this.state;\r\n    authAxios\r\n      .post(addressCreateURL, {\r\n        ...formData,\r\n        user: userID,\r\n        address_type: activeItem === \"billingAddress\" ? \"B\" : \"S\",\r\n      })\r\n      .then((res) => {\r\n        this.setState({ loading: false, success: true });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ error: err });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      activeItem,\r\n      addresses,\r\n      countries,\r\n      error,\r\n      formData,\r\n      saving,\r\n      success,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <Grid container columns={2} divides>\r\n        <Grid.Row>\r\n          <Grid.Column columns={1}>\r\n            {error && (\r\n              <Message\r\n                error\r\n                header=\"There was an error\"\r\n                content={JSON.stringify(error)}\r\n              />\r\n            )}\r\n            {loading && (\r\n              <Segment>\r\n                <Dimmer active inverted>\r\n                  <Loader inverted>Loading</Loader>\r\n                </Dimmer>\r\n\r\n                <Image src=\"/images/wireframe/short-paragraph.png\" />\r\n              </Segment>\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column width={6}>\r\n            {\" \"}\r\n            <Menu pointing vertical>\r\n              <Menu.Item\r\n                name=\"Billing Address\"\r\n                active={activeItem === \"billingAddress\"}\r\n                onClick={this.handleItemClick}\r\n              />\r\n              <Menu.Item\r\n                name=\"Physical Address\"\r\n                active={activeItem === \"physicalAddress\"}\r\n                onClick={this.handleItemClick}\r\n              />\r\n            </Menu>\r\n          </Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Header>{`Update your ${\r\n              activeItem === \"Billing Address\" ? \"Billing\" : \"Shipping\"\r\n            } address`}</Header>\r\n            <Divider />\r\n            <Card.Group>\r\n              {addresses.map((a) => {\r\n                return (\r\n                  <Card key={a.id}>\r\n                    <Card.Content>\r\n                      {a.default && (\r\n                        <Label as=\"a\" color=\"blue\" ribbon=\"right\">\r\n                          Default\r\n                        </Label>\r\n                      )}\r\n                      <Card.Header>\r\n                        {a.street_address}, {a.apartment_address}\r\n                      </Card.Header>\r\n                      <Card.Meta>{a.country}</Card.Meta>\r\n                      <Card.Description>{a.zip}</Card.Description>\r\n                    </Card.Content>\r\n                  </Card>\r\n                );\r\n              })}\r\n            </Card.Group>\r\n            {addresses.length > 0 ? <Divider /> : null}\r\n\r\n            <Form onSubmit={this.handleCreateAddress} success={success}>\r\n              <Form.Input\r\n                required\r\n                name=\"street_address\"\r\n                placeholder=\"Street Address\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Input\r\n                required\r\n                name=\"apartment_address\"\r\n                placeholder=\"Apartment Address\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Field required>\r\n                <Select\r\n                  fluid\r\n                  loading={countries.length < 1}\r\n                  options={countries}\r\n                  search\r\n                  clearble\r\n                  name=\"country\"\r\n                  placeholder=\"Country\"\r\n                  onChange={this.handleSelectChange}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Input\r\n                required\r\n                name=\"zip\"\r\n                placeholder=\"zip\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Checkbox\r\n                name=\"default\"\r\n                label=\"Make this the default address?\"\r\n                onChange={this.handleToggleDefault}\r\n                checked={formData.default}\r\n              />\r\n              {success && (\r\n                <Message\r\n                  success\r\n                  header=\"Form completed\"\r\n                  content=\"Your address was saved \"\r\n                />\r\n              )}\r\n              <Form.Button loading={saving} disabled={saving} primary>\r\n                Save\r\n              </Form.Button>\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}